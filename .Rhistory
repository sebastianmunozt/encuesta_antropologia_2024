ea_04_notas_ultimo_semestre == "considerando que el segundo semestre del 2023 cursaba 4to medio, tuve un 6.7" ~ NA,
ea_04_notas_ultimo_semestre =="fui a un preu y solo fue desempe√±o asi que no se, solo se que mejore eso cuenta?" ~ NA,
ea_04_notas_ultimo_semestre == "." ~ NA,
ea_04_notas_ultimo_semestre == "5,6(?" ~ "5.6",
ea_04_notas_ultimo_semestre == "58-60" ~ "5.9",
ea_04_notas_ultimo_semestre == "Entre 5.0 y 5.5" ~ "5.3",
ea_04_notas_ultimo_semestre == "No s√© :( " ~ NA,
ea_04_notas_ultimo_semestre == "Congele " ~ NA,
ea_04_notas_ultimo_semestre == "congel√© " ~ NA,
ea_04_notas_ultimo_semestre == "6,0 aprox" ~ "6.0",
ea_04_notas_ultimo_semestre == "no me acuerdo" ~ NA,
ea_04_notas_ultimo_semestre == "estimo que entre un 55-60 pero no tengo certeza" ~ "5.7",
ea_04_notas_ultimo_semestre == "5,0 aprox" ~ "5.0",
ea_04_notas_ultimo_semestre == "Estoy en primer semestre " ~ NA,
ea_04_notas_ultimo_semestre == "estoy en primer a√±o" ~ NA,
ea_04_notas_ultimo_semestre == "c√≥mo un 5,0 no s√©" ~ "5.0",
ea_04_notas_ultimo_semestre == "Arriba de 56 " ~ "5.6",
ea_04_notas_ultimo_semestre == "Ingrese reci√©n este a√±o, as√≠ que a√∫n no termino el primer semestre "  ~ NA,
ea_04_notas_ultimo_semestre == "estoy en mi primer semestre, pero entre las 4 notas que tengo hacen promedio 6.4" ~ NA,
ea_04_notas_ultimo_semestre == "A" ~ NA,
ea_04_notas_ultimo_semestre == "nose"  ~ NA,
ea_04_notas_ultimo_semestre == "Cursando primer semestre " ~ NA,
ea_04_notas_ultimo_semestre == "a√∫n tengo muy pocas notas como para responder esta respuestaüòø" ~ NA,
ea_04_notas_ultimo_semestre == "Este es mi primer semestre" ~ NA,
ea_04_notas_ultimo_semestre == "62.0" ~ "6.2",
ea_04_notas_ultimo_semestre == "57.0" ~ "5.7",
ea_04_notas_ultimo_semestre == "60.0" ~ "6.0",
ea_04_notas_ultimo_semestre == "58.0" ~ "5.8",
ea_04_notas_ultimo_semestre == "53.0" ~ "5.3",
ea_04_notas_ultimo_semestre == "0.0" ~ NA,
ea_04_notas_ultimo_semestre == "63.0" ~ "6.3",
ea_04_notas_ultimo_semestre == "50.0" ~ "5.0",
ea_04_notas_ultimo_semestre == "64.0" ~ "6.4",
ea_04_notas_ultimo_semestre == "45.0" ~ "4.5",
ea_04_notas_ultimo_semestre == "52.0" ~ "5.2",
ea_04_notas_ultimo_semestre == "59.0" ~ "5.9",
ea_04_notas_ultimo_semestre == "49.0" ~ "4.9",
ea_04_notas_ultimo_semestre == "67.0" ~ "6.7",
ea_04_notas_ultimo_semestre == "48.0" ~ "4.8",
TRUE ~  ea_04_notas_ultimo_semestre ))
unique(base_antropologia$ea_04_notas_ultimo_semestre)
base_antropologia$ea_04_notas_ultimo_semestre <- as.numeric(base_antropologia$ea_04_notas_ultimo_semestre)
class(base_antropologia$ea_04_notas_ultimo_semestre)
table(base_antropologia$ea_04_notas_ultimo_semestre)
base_antropologia <- base_antropologia %>%
mutate (notas_ultimo_semestre_intervalo= case_when (ea_04_notas_ultimo_semestre >= 4 & ea_04_notas_ultimo_semestre < 5 ~ "4.0 a 4.9",
ea_04_notas_ultimo_semestre >= 5 & ea_04_notas_ultimo_semestre < 6  ~ "5.0 a 5.9",
ea_04_notas_ultimo_semestre >= 6 & ea_04_notas_ultimo_semestre < 7 ~ "6.0 a 7.0",
))
table(base_antropologia$notas_ultimo_semestre_intervalo)
#3.4.5. Satisfacci√≥n rendimiento  ####
# realizado por: Samanta
unique(base_antropologia$ea_05)
# renombro
base_antropologia <- base_antropologia %>% dplyr::rename(ea_05_satisfaccion_rendimiento_academico = ea_05)
names(base_antropologia)
# Observo categor√≠as
table(base_antropologia$ea_05_satisfaccion_rendimiento_academico)
class(base_antropologia$ea_05_satisfaccion_rendimiento_academico)
# Ordeno categor√≠as y transformo a factor
base_antropologia$ea_05_satisfaccion_rendimiento_academico <- base_antropologia$ea_05_satisfaccion_rendimiento_academico %>% fct_relevel(c("Muy insatisfecho", "Insatisfecho", "Satisfecho", "Muy satisfecho"))
class(base_antropologia$ea_05_satisfaccion_rendimiento_academico)
# Recodifico
base_antropologia <- base_antropologia %>%
mutate(ea_05_satisfaccion_rendimiento_academico_r = case_when(ea_05_satisfaccion_rendimiento_academico== "Insatisfecho" ~ "Insatisfecho",
ea_05_satisfaccion_rendimiento_academico== "Muy insatisfecho" ~ "Insatisfecho",
ea_05_satisfaccion_rendimiento_academico== "Muy Satisfecho" ~ "Satisfecho",
ea_05_satisfaccion_rendimiento_academico== "Satisfecho" ~ "Satisfecho"))
# Observo lo realizado
table(base_antropologia$ea_05_satisfaccion_rendimiento_academico_r)
#3.4.6. Nivel de Estr√©s  ####
# realizado por: Joaqu√≠n
unique(base_antropologia$ea_06)
base_antropologia <- base_antropologia %>% dplyr::rename(ea_06_nivel_estres_ultimo_semestre = ea_06)
table(base_antropologia$ea_06_nivel_estres_ultimo_semestre)
class(base_antropologia$ea_06_nivel_estres_ultimo_semestre)
# recodifico
base_antropologia <- base_antropologia %>%
mutate(ea_06_nivel_estres_ultimo_semestre_r=case_when(ea_06_nivel_estres_ultimo_semestre == 1 ~ "Estres Bajo",
ea_06_nivel_estres_ultimo_semestre == 2 ~ "Estres Bajo",
ea_06_nivel_estres_ultimo_semestre == 3 ~ "Estres Moderado",
ea_06_nivel_estres_ultimo_semestre == 4 ~ "Estres Alto",
ea_06_nivel_estres_ultimo_semestre == 5 ~ "Estres Alto",
))
# ordeno variable recodificada
base_antropologia <- base_antropologia %>%
mutate(ea_06_nivel_estres_ultimo_semestre_r= factor(ea_06_nivel_estres_ultimo_semestre_r, levels = c("Estres Bajo","Estres Moderado",
"Estres Alto" ), ordered = TRUE))
# observo recodificaci√≥n
table(base_antropologia$ea_06_nivel_estres_ultimo_semestre_r)
#3.4.7. Estr√©s ante rendimiento  ####
# realizado por: Joaqu√≠n
unique(base_antropologia$ea_07)
base_antropologia <- base_antropologia %>% dplyr::rename(ea_07_efecto_estres_rendimiento = ea_07)
table(base_antropologia$ea_07_efecto_estres_rendimiento)
#ordeno
base_antropologia <- base_antropologia %>%
mutate(ea_07_efecto_estres_rendimiento =factor(ea_07_efecto_estres_rendimiento, levels = c("Poco","Moderado",
"Bastante","Mucho"), ordered = TRUE))
table(base_antropologia$ea_07_efecto_estres_rendimiento)
#recodifico en dos
base_antropologia <- base_antropologia %>%
mutate(ea_07_efecto_estres_rendimiento_r=case_when(ea_07_efecto_estres_rendimiento == "Mucho" ~ "Bastante",
ea_07_efecto_estres_rendimiento == "Bastante" ~ "Bastante",
ea_07_efecto_estres_rendimiento == "Moderado" ~ "Moderadamente",
ea_07_efecto_estres_rendimiento == "Poco" ~ "Moderadamente"
))
base_antropologia <- base_antropologia %>%
mutate(ea_07_efecto_estres_rendimiento_r= factor(ea_07_efecto_estres_rendimiento_r, levels = c("Moderadamente",
"Bastante"
), ordered = TRUE))
#observo
table(base_antropologia$ea_07_efecto_estres_rendimiento_r)
# ea_08_puede_identificar_por_si_mismo_cuando_se_siente_estresado_debidos_a_factores_relacionados_con_el_ambito_universitario",
unique(base_antropologia$ea_08)
# 4. Exportar ----------------------------------------------------------------
names(base_antropologia)
write.xlsx(x = base_antropologia,file = "base_antropologia_limpia.xlsx")
# 5. An√°lisis Univariados y bivariados-------------------------------
names(base_antropologia)
base_antropologia <- read.xlsx("base_antropologia_limpia.xlsx")
libro_codigos<- read.xlsx("M√©todos Cuantitativos III (respuestas).xlsx") # dejo una base sin limpiar para observar nombres de preguntas
names(base_antropologia)
# a) Distribuci√≥n de Frecuencias
n_encuestador_t <- freq(base_antropologia$n_encuestador, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
#install.packages("kableExtra")
library(kableExtra)
freq(base_antropologia$n_encuestador, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb() %>%
kable(col.names = c("Encuestador/a", "Frecuencia", "%", "% Acumulado"),
caption = "Encuestas por Encuestador/a",
format = "html", digits = 2) %>%  #le doy formate con kable
kable_classic(full_width = F, html_font = "Cambria") %>%
save_kable(file = "outputs/n_encuestador.png", zoom = 3)
ea_09_tabla <- freq(respuestas_limpio, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb() %>%
kable(col.names = c("S√≠ntoma", "Frecuencia", "%", "% Acumulado"),
caption = "S√≠ntomas de Estress",
format = "html", digits = 2) %>%  #le doy formate con kable
kable_classic(full_width = F, html_font = "Cambria") %>%
save_kable(file = "outputs/ea_09_tabla.png", zoom = 3)
# realizo gr√°fico
g_ea_09_graf <- ggplot(ea_09_graf, aes(x = Porcentaje, y = fct_reorder(Problema, Porcentaje), fill= Problema)) +
geom_col() +
labs(title = "S√≠ntomas de Estr√©s Acad√©mico",
subtitle = "seg√∫n datos de Encuestas Estudiantes Antropolog√≠a 2024",
x = "%",
y = "S√≠ntoma") +
geom_text(data = ea_09_graf %>% filter(rank(-Porcentaje) <= 12), # Solo a√±adir texto a las primeras 8 categor√≠as
aes(label = ifelse(rank(-Porcentaje) <= 12, paste0(round(Porcentaje, 1), "%"), "")),
hjust = 1, size = 3, nudge_x = -.9, fontface= "bold", color = "white") +
scale_fill_viridis_d(option = "C", guide = "none") +
theme_ipsum()
ggsave("outputs/g_ea_09_graf.png", plot = g_ea_09_graf, width = 10, height = 7, dpi = 300)
identidades <- rep(base_antropologia$identidad_genero_r, times = sapply(strsplit(base_antropologia$ea_09, ",\\s*"), length))
# Creamos un nuevo DataFrame con las respuestas e identidades
data_cruzada <- data.frame(Respuesta = respuestas_ea_09, IdentidadGenero = identidades)
tabla_porcentajes <- data_cruzada %>%
select(Respuesta, IdentidadGenero) %>%
droplevels() %>%
table() %>%
addmargins(., 2) %>%
prop.table(., 2) %>%
round(4) * 100
# Convertir la matriz a un data frame para manejar m√°s f√°cilmente
df_porcentajes <- as.data.frame.matrix(tabla_porcentajes)
# Agregar una fila de totales al data frame
df_porcentajes <- bind_rows(df_porcentajes, Total = colSums(df_porcentajes))
# Mostrar el resultado
print(df_porcentajes)
ctable( x = data_cruzada$Respuesta, y = data_cruzada$IdentidadGenero, prop = "c", justify = "l", chisq = T)
# ea_10_que_estrategias_utiliza_con_mayor_frecuencia_para_manejar_el_estres_academico_seleccione_todas_las_alternativas_que_correspondan_con_su_caso",
unique(base_antropologia$ea_10) # NOEL
unique(base_antropologia$ea_10)
class(base_antropologia$ea_10)
base_antropologia <- base_antropologia %>%
mutate(ea_10 = case_when(
grepl("Participar en otras actividades creativas \\(m√∫sica, arte, escritura\\)", ea_10) ~
gsub("Participar en otras actividades creativas \\(m√∫sica, arte, escritura\\)",
"Participar en otras actividades creativas (m√∫sica/arte/escritura)",
ea_10),
TRUE ~ ea_10
))
#separo las respuestas y creo un vector que las lista
respuestas_ea_10 <- unlist(strsplit(base_antropologia$ea_10, ", ")) # separo las respuestas que tienen coma (,)
#hice la lista altiro
unique(respuestas_ea_10)
#observo las respuestas
freq(respuestas_ea_10, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
#elimino espacio antes de primera letra
respuestas_ea_10_limpio <- trimws(respuestas_ea_10, which = "left")
# obtengo las frecuencias de mis preguntas de respuesta m√∫ltiple
freq(respuestas_ea_10_limpio, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
#Guardo para graficar
ea_10_graf <- freq(respuestas_ea_10_limpio, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
ea_10_tabla <- freq(respuestas_ea_10_limpio, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb() %>%
kable(col.names = c("Estrategias", "Frecuencia", "%", "% Acumulado"),
caption = "Estrategias del manejo del estres",
format = "html", digits = 2) %>%  #le doy formate con kable
kable_classic(full_width = F, html_font = "Cambria") %>%
save_kable(file = "outputs/ea_10_tabla.png", zoom = 3)
install.packages("kableExtra")
library(kableExtra)
install.packages("kableExtra")
# Suponiendo que 'base_antropologia' es tu DataFrame
# Primero, aseguramos que 'ea_09' y 'identidad_genero_r' sean tratados como caracteres
base_antropologia$ea_09 <- as.character(base_antropologia$ea_09)
base_antropologia$identidad_genero_r <- as.character(base_antropologia$identidad_genero_r)
# Suponiendo que 'base_antropologia' es tu DataFrame
# Primero, aseguramos que 'ea_09' y 'identidad_genero_r' sean tratados como caracteres
base_antropologia$ea_09 <- as.character(base_antropologia$ea_09)
base_antropologia$identidad_genero_r <- as.character(base_antropologia$identidad_genero_r)
# Separamos las respuestas m√∫ltiples de 'ea_09' y las cruzamos con 'identidad_genero_r'
respuestas_ea_09 <- unlist(strsplit(base_antropologia$ea_09, ",\\s*"))
identidades <- rep(base_antropologia$identidad_genero_r, times = sapply(strsplit(base_antropologia$ea_09, ",\\s*"), length))
# Creamos un nuevo DataFrame con las respuestas e identidades
data_cruzada <- data.frame(Respuesta = respuestas_ea_09, IdentidadGenero = identidades)
tabla_porcentajes <- data_cruzada %>%
select(Respuesta, IdentidadGenero) %>%
droplevels() %>%
table() %>%
addmargins(., 2) %>%
prop.table(., 2) %>%
round(4) * 100
tabla_porcentajes <- data_cruzada %>%
select(Respuesta, IdentidadGenero) %>%
droplevels() %>%
table() %>%
addmargins(., 2) %>%
prop.table(., 2) %>%
round(4) * 100
# Creamos un nuevo DataFrame con las respuestas e identidades
data_cruzada <- data.frame(Respuesta = respuestas_ea_09, IdentidadGenero = identidades)
tabla_porcentajes <- data_cruzada %>%
select(Respuesta, IdentidadGenero) %>%
droplevels() %>%
table() %>%
addmargins(., 2) %>%
prop.table(., 2) %>%
round(4) * 100
tabla_porcentajes <- data_cruzada %>%
select(Respuesta, IdentidadGenero) %>%
droplevels() %>%
table() %>%
addmargins(., 2) %>%
prop.table(., 2) %>%
round(4) * 100
base_antropologia <- read.xlsx("base_antropologia_limpia.xlsx")
# 1. Instalo y abro paquetes -------------------------------------------------
# install.packages("pacman")
pacman::p_load(tidyverse,# Universo de paquetes : tidyr, dplyr, ggplot2,readr,purrr,tibble, stringr, forcats
openxlsx,#leer archivos xlsx
readxl,# leer archivos xl      #dos formatos de excel xlsx y xl
janitor,#limpieza de datos
writexl,#Guardar tablas formato excel
DataExplorer) #Exploraci√≥n r√°pida
pacman::p_load(tidyverse, openxlsx, readxl,readr,janitor, forcats, writexl, DataExplorer,
datos,  knitr, gt, summarytools, ggthemes, hrbrthemes, foreign, DescTools, ineq)
base_antropologia <- read.xlsx("base_antropologia_limpia.xlsx")
libro_codigos<- read.xlsx("M√©todos Cuantitativos III (respuestas).xlsx") # dejo una base sin limpiar para observar nombres de preguntas
# a) Distribuci√≥n de Frecuencias
n_encuestador_t <- freq(base_antropologia$n_encuestador, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
View(n_encuestador_t)
#install.packages("kableExtra")
library(kableExtra)
freq(base_antropologia$n_encuestador, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb() %>%
kable(col.names = c("Encuestador/a", "Frecuencia", "%", "% Acumulado"),
caption = "Encuestas por Encuestador/a",
format = "html", digits = 2) %>%  #le doy formate con kable
kable_classic(full_width = F, html_font = "Cambria") %>%
save_kable(file = "outputs/n_encuestador.png", zoom = 3)
# b) realizaci√≥n de gr√°fico
# renombro nombre de mi tabla
n_encuestador_t <-  n_encuestador_t %>%
rename(Nombre = value, Porcentaje= pct, Frecuencia = freq)
# realizo gr√°fico
ggplot(n_encuestador_t, aes(x = Frecuencia, y = fct_reorder(Nombre, Frecuencia), fill= Nombre)) +
geom_col() +
labs(title = "Encuestas por Encuestador/a",
subtitle = "seg√∫n datos de Encuestas Estudiantes Antropolog√≠a 2024",
x = "%",  # Esto establece el t√≠tulo del eje x, pero no afecta las etiquetas dentro del gr√°fico
y = "Nombre del Encuestador/a") +
geom_text(aes(label = round(Frecuencia, 1)),  # Ahora esto a√±ade etiquetas a todas las barras
hjust = 1, size = 3, nudge_x = -0.9, fontface= "bold", color = "white") +
scale_fill_viridis_d(option = "C", guide = "none") +
theme_ipsum()
# guardo gr√°fico
n_encuestador_g <- ggplot(n_encuestador_t, aes(x = Frecuencia, y = fct_reorder(Nombre, Frecuencia), fill= Nombre)) +
geom_col() +
labs(title = "Encuestas por Encuestador/a",
subtitle = "seg√∫n datos de Encuestas Estudiantes Antropolog√≠a 2024",
x = "%",  # Esto establece el t√≠tulo del eje x, pero no afecta las etiquetas dentro del gr√°fico
y = "Nombre del Encuestador/a") +
geom_text(aes(label = round(Frecuencia, 1)),  # Ahora esto a√±ade etiquetas a todas las barras
hjust = 1, size = 3, nudge_x = -0.9, fontface= "bold", color = "white") +
scale_fill_viridis_d(option = "C", guide = "none") +
theme_ipsum()
# guardo gr√°fico
n_encuestador_g <- ggplot(n_encuestador_t, aes(x = Frecuencia, y = fct_reorder(Nombre, Frecuencia), fill= Nombre)) +
geom_col() +
labs(title = "Encuestas por Encuestador/a",
subtitle = "seg√∫n datos de Encuestas Estudiantes Antropolog√≠a 2024",
x = "%",  # Esto establece el t√≠tulo del eje x, pero no afecta las etiquetas dentro del gr√°fico
y = "Nombre del Encuestador/a") +
geom_text(aes(label = round(Frecuencia, 1)),  # Ahora esto a√±ade etiquetas a todas las barras
hjust = 1, size = 3, nudge_x = -0.9, fontface= "bold", color = "white") +
scale_fill_viridis_d(option = "C", guide = "none") +
theme_ipsum()
ggsave("outputs/n_encuestador_g.png", plot = n_encuestador_g, width = 10, height = 7, dpi = 300)
freq(base_antropologia$n_encuestador, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb() %>%
kable(col.names = c("Encuestador/a", "Frecuencia", "%", "% Acumulado"),
caption = "Encuestas por Encuestador/a",
format = "html", digits = 2) %>%  #le doy formate con kable
kable_classic(full_width = F, html_font = "Cambria") %>%
save_kable(file = "outputs/n_encuestador.png", zoom = 3)
freq(base_antropologia$n_encuestador, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb() %>%
kable(col.names = c("Encuestador/a", "Frecuencia", "%", "% Acumulado"),
caption = "Encuestas por Encuestador/a",
format = "html", digits = 2) %>%  #le doy formate con kable
kable_classic(full_width = F, html_font = "Cambria") %>%
save_kable(file = "outputs/n_encuestador.png", zoom = 3)
a
#install.packages("kableExtra")
library(kableExtra)
freq(base_antropologia$n_encuestador, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb() %>%
kable(col.names = c("Encuestador/a", "Frecuencia", "%", "% Acumulado"),
caption = "Encuestas por Encuestador/a",
format = "html", digits = 2) %>%  #le doy formate con kable
kable_classic(full_width = F, html_font = "Cambria") %>%
save_kable(file = "outputs/n_encuestador.png", zoom = 3)
freq(base_antropologia$n_encuestador, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb() %>%
kable(col.names = c("Encuestador/a", "Frecuencia", "%", "% Acumulado"),
caption = "Encuestas por Encuestador/a",
format = "html", digits = 2) %>%  #le doy formate con kable
kable_classic(full_width = F, html_font = "Cambria") %>%
save_kable(table_html, file = "outputs/n_encuestador.png", zoom = 3)
# a) Distribuci√≥n de Frecuencias
n_encuestador_t <- freq(base_antropologia$n_encuestador, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
#install.packages("kableExtra")
library(kableExtra)
freq(base_antropologia$n_encuestador, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb() %>%
kable(col.names = c("Encuestador/a", "Frecuencia", "%", "% Acumulado"),
caption = "Encuestas por Encuestador/a",
format = "html", digits = 2) %>%  #le doy formate con kable
kable_classic(full_width = F, html_font = "Cambria") %>%
save_kable(table_html, file = "outputs/n_encuestador.png", zoom = 3)
freq(base_antropologia$n_encuestador, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb() %>%
kable(col.names = c("Encuestador/a", "Frecuencia", "%", "% Acumulado"),
caption = "Encuestas por Encuestador/a",
format = "html", digits = 2) %>%  #le doy formate con kable
kable_classic(full_width = F, html_font = "Cambria") %>%
save_kable(n_encuestador_t, file = "outputs/n_encuestador.png", zoom = 3)
# a) Distribuci√≥n de Frecuencias
n_encuestador_t <- freq(base_antropologia$n_encuestador, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
#install.packages("kableExtra")
library(kableExtra)
freq(base_antropologia$n_encuestador, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb() %>%
kable(col.names = c("Encuestador/a", "Frecuencia", "%", "% Acumulado"),
caption = "Encuestas por Encuestador/a",
format = "html", digits = 2) %>%  #le doy formate con kable
kable_classic(full_width = F, html_font = "Cambria") %>%
save_kable(n_encuestador_t, file = "outputs/n_encuestador.png", zoom = 3)
class(n_encuestador_t)
names(base_antropologia)
# a) Distribuci√≥n de Frecuencias
n_encuestador_t <- freq(base_antropologia$n_encuestador, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
#install.packages("kableExtra")
library(kableExtra)
freq(base_antropologia$n_encuestador, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb() %>%
kable(col.names = c("Encuestador/a", "Frecuencia", "%", "% Acumulado"),
caption = "Encuestas por Encuestador/a",
format = "html", digits = 2) %>%  #le doy formate con kable
kable_classic(full_width = F, html_font = "Cambria") %>%
save_kable(file = "outputs/n_encuestador.png", zoom = 3)
# b) realizaci√≥n de gr√°fico
# renombro nombre de mi tabla
n_encuestador_t <-  n_encuestador_t %>%
rename(Nombre = value, Porcentaje= pct, Frecuencia = freq)
# realizo gr√°fico
ggplot(n_encuestador_t, aes(x = Frecuencia, y = fct_reorder(Nombre, Frecuencia), fill= Nombre)) +
geom_col() +
labs(title = "Encuestas por Encuestador/a",
subtitle = "seg√∫n datos de Encuestas Estudiantes Antropolog√≠a 2024",
x = "%",  # Esto establece el t√≠tulo del eje x, pero no afecta las etiquetas dentro del gr√°fico
y = "Nombre del Encuestador/a") +
geom_text(aes(label = round(Frecuencia, 1)),  # Ahora esto a√±ade etiquetas a todas las barras
hjust = 1, size = 3, nudge_x = -0.9, fontface= "bold", color = "white") +
scale_fill_viridis_d(option = "C", guide = "none") +
theme_ipsum()
# guardo gr√°fico
n_encuestador_g <- ggplot(n_encuestador_t, aes(x = Frecuencia, y = fct_reorder(Nombre, Frecuencia), fill= Nombre)) +
geom_col() +
labs(title = "Encuestas por Encuestador/a",
subtitle = "seg√∫n datos de Encuestas Estudiantes Antropolog√≠a 2024",
x = "%",  # Esto establece el t√≠tulo del eje x, pero no afecta las etiquetas dentro del gr√°fico
y = "Nombre del Encuestador/a") +
geom_text(aes(label = round(Frecuencia, 1)),  # Ahora esto a√±ade etiquetas a todas las barras
hjust = 1, size = 3, nudge_x = -0.9, fontface= "bold", color = "white") +
scale_fill_viridis_d(option = "C", guide = "none") +
theme_ipsum()
ggsave("outputs/n_encuestador_g.png", plot = n_encuestador_g, width = 10, height = 7, dpi = 300)
# frecuencia
identida_genero_t <- freq(base_antropologia$identidad_genero_r, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
# frecuencia
identida_genero_t <- freq(base_antropologia$identidad_genero, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
# gr√°fico
ggplot(identida_genero_t, aes(x = Frecuencia, y = fct_reorder(Nombre, Frecuencia), fill= Nombre)) +
geom_col() +
labs(title = "Identidad de g√©nero",
subtitle = "seg√∫n datos de Encuestas Estudiantes Antropolog√≠a 2024",
x = "%",  # Esto establece el t√≠tulo del eje x, pero no afecta las etiquetas dentro del gr√°fico
y = "Identidad de g√©nero") +
geom_text(aes(label = round(Frecuencia, 1)),  # Ahora esto a√±ade etiquetas a todas las barras
hjust = 1, size = 3, nudge_x = -0.9, fontface= "bold", color = "white") +
scale_fill_viridis_d(option = "C", guide = "none") +
theme_ipsum()
# frecuencia
identida_genero_t <- freq(base_antropologia$identidad_genero, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
# gr√°fico
ggplot(identida_genero_t, aes(x = Frecuencia, y = fct_reorder(Nombre, Frecuencia), fill= Nombre)) +
geom_col() +
labs(title = "Identidad de g√©nero",
subtitle = "seg√∫n datos de Encuestas Estudiantes Antropolog√≠a 2024",
x = "%",  # Esto establece el t√≠tulo del eje x, pero no afecta las etiquetas dentro del gr√°fico
y = "Identidad de g√©nero") +
geom_text(aes(label = round(Frecuencia, 1)),  # Ahora esto a√±ade etiquetas a todas las barras
hjust = 1, size = 3, nudge_x = -0.9, fontface= "bold", color = "white") +
scale_fill_viridis_d(option = "C", guide = "none") +
theme_ipsum()
View(identida_genero_t)
install.packages("kableExtra")
library(kableExtra)
# frecuencia
identida_genero_t <- freq(base_antropologia$identidad_genero, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
freq(base_antropologia$identidad_genero, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb() %>%
kable(col.names = c("Encuestador/a", "Frecuencia", "%", "% Acumulado"),
caption = "Identidad de g√©nero",
format = "html", digits = 2) %>%  #le doy formate con kable
kable_classic(full_width = F, html_font = "Cambria") %>%
save_kable(file = "outputs/identidad_genero.png", zoom = 3)
library(kableExtra)
freq(base_antropologia$identidad_genero, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb() %>%
kable(col.names = c("Encuestador/a", "Frecuencia", "%", "% Acumulado"),
caption = "Identidad de g√©nero",
format = "html", digits = 2) %>%  #le doy formate con kable
kable_classic(full_width = F, html_font = "Cambria") %>%
save_kable(file = "outputs/identidad_genero.png", zoom = 3)
install.packages("webshot")
webshot(tabla_html, file = "outputs/identidad_genero.png", zoom = 3)
webshot(identida_genero_t, file = "outputs/identidad_genero.png", zoom = 3)
webshot::install_phantomjs()
webshot(identida_genero_t, file = "outputs/identidad_genero.png", zoom = 3)
freq(base_antropologia$identidad_genero, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb() %>%
kable(col.names = c("Encuestador/a", "Frecuencia", "%", "% Acumulado"),
caption = "Identidad de g√©nero",
format = "html", digits = 2) %>%  #le doy formate con kable
kable_classic(full_width = F, html_font = "Cambria") %>%
save_kable(file = "outputs/identidad_genero.png", zoom = 3)
# frecuencia
identidad_genero_t <- freq(base_antropologia$identidad_genero, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
# frecuencia
identidad_genero_t <- freq(base_antropologia$identidad_genero, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
webshot::install_phantomjs()
freq(base_antropologia$identidad_genero, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb() %>%
kable(col.names = c("Encuestador/a", "Frecuencia", "%", "% Acumulado"),
caption = "Identidad de g√©nero",
format = "html", digits = 2) %>%  #le doy formate con kable
kable_classic(full_width = F, html_font = "Cambria") %>%
save_kable(file = "outputs/identidad_genero.png", zoom = 3)
library(webshot2)
freq(base_antropologia$identidad_genero, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb() %>%
kable(col.names = c("Encuestador/a", "Frecuencia", "%", "% Acumulado"),
caption = "Identidad de g√©nero",
format = "html", digits = 2) %>%  #le doy formate con kable
kable_classic(full_width = F, html_font = "Cambria") %>%
save_kable(file = "outputs/identidad_genero.png", zoom = 3)
freq(base_antropologia$identidad_genero, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb() %>%
kable(col.names = c("Encuestador/a", "Frecuencia", "%", "% Acumulado"),
caption = "Identidad de g√©nero",
format = "html", digits = 2) %>%  #le doy formate con kable
kable_classic(full_width = F, html_font = "Cambria") %>%
save_kable(file = "outputs/identidad_genero.png", zoom = 3)
