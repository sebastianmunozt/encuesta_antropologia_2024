ea_05_satisfaccion_rendimiento_academico== "Muy Satisfecho" ~ "Satisfecho",
ea_05_satisfaccion_rendimiento_academico== "Satisfecho" ~ "Satisfecho"))
# Observo lo realizado
table(base_antropologia$ea_05_satisfaccion_rendimiento_academico_r)
#3.4.6. Nivel de Estrés  ####
# realizado por: Joaquín
unique(base_antropologia$ea_06)
base_antropologia <- base_antropologia %>% dplyr::rename(ea_06_nivel_estres_ultimo_semestre = ea_06)
table(base_antropologia$ea_06_nivel_estres_ultimo_semestre)
class(base_antropologia$ea_06_nivel_estres_ultimo_semestre)
# recodifico
base_antropologia <- base_antropologia %>%
mutate(ea_06_nivel_estres_ultimo_semestre_r=case_when(ea_06_nivel_estres_ultimo_semestre == 1 ~ "Estres Bajo",
ea_06_nivel_estres_ultimo_semestre == 2 ~ "Estres Bajo",
ea_06_nivel_estres_ultimo_semestre == 3 ~ "Estres Moderado",
ea_06_nivel_estres_ultimo_semestre == 4 ~ "Estres Alto",
ea_06_nivel_estres_ultimo_semestre == 5 ~ "Estres Alto",
))
# ordeno variable recodificada
base_antropologia <- base_antropologia %>%
mutate(ea_06_nivel_estres_ultimo_semestre_r= factor(ea_06_nivel_estres_ultimo_semestre_r, levels = c("Estres Bajo","Estres Moderado",
"Estres Alto" ), ordered = TRUE))
# observo recodificación
table(base_antropologia$ea_06_nivel_estres_ultimo_semestre_r)
#3.4.7. Estrés ante rendimiento  ####
# realizado por: Joaquín
unique(base_antropologia$ea_07)
base_antropologia <- base_antropologia %>% dplyr::rename(ea_07_efecto_estres_rendimiento = ea_07)
table(base_antropologia$ea_07_efecto_estres_rendimiento)
#ordeno
base_antropologia <- base_antropologia %>%
mutate(ea_07_efecto_estres_rendimiento =factor(ea_07_efecto_estres_rendimiento, levels = c("Poco","Moderado",
"Bastante","Mucho"), ordered = TRUE))
table(base_antropologia$ea_07_efecto_estres_rendimiento)
#recodifico en dos
base_antropologia <- base_antropologia %>%
mutate(ea_07_efecto_estres_rendimiento_r=case_when(ea_07_efecto_estres_rendimiento == "Mucho" ~ "Bastante",
ea_07_efecto_estres_rendimiento == "Bastante" ~ "Bastante",
ea_07_efecto_estres_rendimiento == "Moderado" ~ "Moderadamente",
ea_07_efecto_estres_rendimiento == "Poco" ~ "Moderadamente"
))
base_antropologia <- base_antropologia %>%
mutate(ea_07_efecto_estres_rendimiento_r= factor(ea_07_efecto_estres_rendimiento_r, levels = c("Moderadamente",
"Bastante"
), ordered = TRUE))
#observo
table(base_antropologia$ea_07_efecto_estres_rendimiento_r)
# ea_08_puede_identificar_por_si_mismo_cuando_se_siente_estresado_debidos_a_factores_relacionados_con_el_ambito_universitario",
unique(base_antropologia$ea_08)
# 4. Exportar ----------------------------------------------------------------
names(base_antropologia)
write.xlsx(x = base_antropologia,file = "base_antropologia_limpia.xlsx")
base_antropologia <- read.xlsx("base_antropologia_limpia.xlsx")
View(base_antropologia)
libro_codigos<- read.xlsx("Métodos Cuantitativos III (respuestas).xlsx") # dejo una base sin limpiar para observar nombres de preguntas
names(base_antropologia)
# a) Distribución de Frecuencias
n_encuestador_t <- freq(base_antropologia$n_encuestador, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
install.packages("kableExtra")
library(kableExtra)
freq(base_antropologia$n_encuestador, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb() %>%
kable(col.names = c("Encuestador/a", "Frecuencia", "%", "% Acumulado"),
caption = "Encuestas por Encuestador/a",
format = "html", digits = 2) %>%  #le doy formate con kable
kable_classic(full_width = F, html_font = "Cambria") %>%
save_kable(file = "outputs/n_encuestador.png", zoom = 3)
freq(base_antropologia$n_encuestador, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb() %>%
kable(col.names = c("Encuestador/a", "Frecuencia", "%", "% Acumulado"),
caption = "Encuestas por Encuestador/a",
format = "html", digits = 2) %>%  #le doy formate con kable
kable_classic(full_width = F, html_font = "Cambria") %>%
save_kable(file = "outputs/n_encuestador.png", zoom = 3)
freq(base_antropologia$n_encuestador, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb() %>%
kable(col.names = c("Encuestador/a", "Frecuencia", "%", "% Acumulado"),
caption = "Encuestas por Encuestador/a",
format = "html", digits = 2) %>%  #le doy formate con kable
kable_classic(full_width = F, html_font = "Cambria") %>%
save_kable(file = "outputs/n_encuestador.png", zoom = 3)
# b) realización de gráfico
# renombro nombre de mi tabla
n_encuestador_t <-  n_encuestador_t %>%
rename(Nombre = value, Porcentaje= pct, Frecuencia = freq)
# realizo gráfico
ggplot(n_encuestador_t, aes(x = Frecuencia, y = fct_reorder(Nombre, Frecuencia), fill= Nombre)) +
geom_col() +
labs(title = "Encuestas por Encuestador/a",
subtitle = "según datos de Encuestas Estudiantes Antropología 2024",
x = "%",  # Esto establece el título del eje x, pero no afecta las etiquetas dentro del gráfico
y = "Nombre del Encuestador/a") +
geom_text(aes(label = round(Frecuencia, 1)),  # Ahora esto añade etiquetas a todas las barras
hjust = 1, size = 3, nudge_x = -0.9, fontface= "bold", color = "white") +
scale_fill_viridis_d(option = "C", guide = "none") +
theme_ipsum()
# guardo gráfico
n_encuestador_g <- ggplot(n_encuestador_t, aes(x = Frecuencia, y = fct_reorder(Nombre, Frecuencia), fill= Nombre)) +
geom_col() +
labs(title = "Encuestas por Encuestador/a",
subtitle = "según datos de Encuestas Estudiantes Antropología 2024",
x = "%",  # Esto establece el título del eje x, pero no afecta las etiquetas dentro del gráfico
y = "Nombre del Encuestador/a") +
geom_text(aes(label = round(Frecuencia, 1)),  # Ahora esto añade etiquetas a todas las barras
hjust = 1, size = 3, nudge_x = -0.9, fontface= "bold", color = "white") +
scale_fill_viridis_d(option = "C", guide = "none") +
theme_ipsum()
ggsave("outputs/n_encuestador_g.png", plot = n_encuestador_g, width = 10, height = 7, dpi = 300)
# 4. Exportar ----------------------------------------------------------------
names(base_antropologia)
write.xlsx(x = base_antropologia,file = "base_antropologia_limpia.xlsx")
# 1. Instalo y abro paquetes -------------------------------------------------
# install.packages("pacman")
pacman::p_load(tidyverse,# Universo de paquetes : tidyr, dplyr, ggplot2,readr,purrr,tibble, stringr, forcats
openxlsx,#leer archivos xlsx
readxl,# leer archivos xl      #dos formatos de excel xlsx y xl
janitor,#limpieza de datos
writexl,#Guardar tablas formato excel
DataExplorer) #Exploración rápida
pacman::p_load(tidyverse, openxlsx, readxl,readr,janitor, forcats, writexl, DataExplorer,
datos,  knitr, gt, summarytools, ggthemes, hrbrthemes, foreign, DescTools, ineq)
write.xlsx(x = base_antropologia,file = "base_antropologia_limpia.xlsx")
write.xlsx(x = base_antropologia,file = "base_antropologia_limpia.xlsx")
base_antropologia <- read.xlsx("base_antropologia_limpia.xlsx")
libro_codigos<- read.xlsx("Métodos Cuantitativos III (respuestas).xlsx") # dejo una base sin limpiar para observar nombres de preguntas
# a) Distribución de Frecuencias
n_encuestador_t <- freq(base_antropologia$n_encuestador, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
install.packages("kableExtra")
library(kableExtra)
freq(base_antropologia$n_encuestador, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb() %>%
kable(col.names = c("Encuestador/a", "Frecuencia", "%", "% Acumulado"),
caption = "Encuestas por Encuestador/a",
format = "html", digits = 2) %>%  #le doy formate con kable
kable_classic(full_width = F, html_font = "Cambria") %>%
save_kable(file = "outputs/n_encuestador.png", zoom = 3)
View(n_encuestador_t)
# b) realización de gráfico
# renombro nombre de mi tabla
n_encuestador_t <-  n_encuestador_t %>%
rename(Nombre = value, Porcentaje= pct, Frecuencia = freq)
# realizo gráfico
ggplot(n_encuestador_t, aes(x = Frecuencia, y = fct_reorder(Nombre, Frecuencia), fill= Nombre)) +
geom_col() +
labs(title = "Encuestas por Encuestador/a",
subtitle = "según datos de Encuestas Estudiantes Antropología 2024",
x = "%",  # Esto establece el título del eje x, pero no afecta las etiquetas dentro del gráfico
y = "Nombre del Encuestador/a") +
geom_text(aes(label = round(Frecuencia, 1)),  # Ahora esto añade etiquetas a todas las barras
hjust = 1, size = 3, nudge_x = -0.9, fontface= "bold", color = "white") +
scale_fill_viridis_d(option = "C", guide = "none") +
theme_ipsum()
# guardo gráfico
n_encuestador_g <- ggplot(n_encuestador_t, aes(x = Frecuencia, y = fct_reorder(Nombre, Frecuencia), fill= Nombre)) +
geom_col() +
labs(title = "Encuestas por Encuestador/a",
subtitle = "según datos de Encuestas Estudiantes Antropología 2024",
x = "%",  # Esto establece el título del eje x, pero no afecta las etiquetas dentro del gráfico
y = "Nombre del Encuestador/a") +
geom_text(aes(label = round(Frecuencia, 1)),  # Ahora esto añade etiquetas a todas las barras
hjust = 1, size = 3, nudge_x = -0.9, fontface= "bold", color = "white") +
scale_fill_viridis_d(option = "C", guide = "none") +
theme_ipsum()
ggsave("outputs/n_encuestador_g.png", plot = n_encuestador_g, width = 10, height = 7, dpi = 300)
# frecuencia
identidad_genero_t <- freq(base_antropologia$identidad_genero, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
freq(base_antropologia$identidad_genero, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb() %>%
kable(col.names = c("Encuestador/a", "Frecuencia", "%", "% Acumulado"),
caption = "Identidad de género",
format = "html", digits = 2) %>%  #le doy formate con kable
kable_classic(full_width = F, html_font = "Cambria") %>%
save_kable(file = "outputs/identidad_genero.png", zoom = 3)
# gráfico
identidad_genero_t <-  identidad_genero_t %>%
rename(Nombre = value, Porcentaje= pct, Frecuencia = freq)
View(identidad_genero_t)
# realizo gráfico
ggplot(identidad_genero_t, aes(x = Frecuencia, y = fct_reorder(Nombre, Frecuencia), fill= Nombre)) +
geom_col() +
labs(title = "Identidad de género",
subtitle = "según datos de Encuestas Estudiantes Antropología 2024",
x = "%",  # Esto establece el título del eje x, pero no afecta las etiquetas dentro del gráfico
y = "Identidad de género") +
geom_text(aes(label = round(Frecuencia, 1)),  # Ahora esto añade etiquetas a todas las barras
hjust = 1, size = 3, nudge_x = -0.9, fontface= "bold", color = "white") +
scale_fill_viridis_d(option = "C", guide = "none") +
theme_ipsum()
# realizo gráfico
identidad_genero_g <- ggplot(identidad_genero_t, aes(x = Frecuencia, y = fct_reorder(Nombre, Frecuencia), fill= Nombre)) +
geom_col() +
labs(title = "Identidad de género",
subtitle = "según datos de Encuestas Estudiantes Antropología 2024",
x = "%",  # Esto establece el título del eje x, pero no afecta las etiquetas dentro del gráfico
y = "Identidad de género") +
geom_text(aes(label = round(Frecuencia, 1)),  # Ahora esto añade etiquetas a todas las barras
hjust = 1, size = 3, nudge_x = -0.9, fontface= "bold", color = "white") +
scale_fill_viridis_d(option = "C", guide = "none") +
theme_ipsum()
View(identidad_genero_g)
View(n_encuestador_g)
ggsave("outputs/identidad_genero_g.png", plot = identidad_genero_g, width = 10, height = 7, dpi = 300)
# realizo gráfico
n_encuestador_g <- ggplot(n_encuestador_t, aes(x = Frecuencia, y = fct_reorder(Nombre, Frecuencia), fill= Nombre)) +
geom_col() +
labs(title = "Encuestas por Encuestador/a",
subtitle = "según datos de Encuestas Estudiantes Antropología 2024",
x = "%",  # Esto establece el título del eje x, pero no afecta las etiquetas dentro del gráfico
y = "Nombre del Encuestador/a") +
geom_text(aes(label = round(Frecuencia, 1)),  # Ahora esto añade etiquetas a todas las barras
hjust = 1, size = 3, nudge_x = -0.9, fontface= "bold", color = "white") +
scale_fill_viridis_d(option = "C", guide = "none") +
theme_ipsum()
ggsave("outputs/n_encuestador_g.png", plot = n_encuestador_g, width = 10, height = 7, dpi = 300)
# a) Distribución de Frecuencias
n_encuestador_t <- freq(base_antropologia$n_encuestador, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
install.packages("kableExtra")
library(kableExtra)
freq(base_antropologia$n_encuestador, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb() %>%
kable(col.names = c("Encuestador/a", "Frecuencia", "%", "% Acumulado"),
caption = "Encuestas por Encuestador/a",
format = "html", digits = 2) %>%  #le doy formate con kable
kable_classic(full_width = F, html_font = "Cambria") %>%
save_kable(file = "outputs/n_encuestador.png", zoom = 3)
View(base_antropologia)
View(libro_codigos)
# Suponiendo que 'base_antropologia' es tu DataFrame
# Primero, aseguramos que 'ea_09' y 'identidad_genero_r' sean tratados como caracteres
base_antropologia$ea_09 <- as.character(base_antropologia$ea_09)
base_antropologia$identidad_genero_r <- as.character(base_antropologia$identidad_genero_r)
# Separamos las respuestas múltiples de 'ea_09' y las cruzamos con 'identidad_genero_r'
respuestas_ea_09 <- unlist(strsplit(base_antropologia$ea_09, ",\\s*"))
identidades <- rep(base_antropologia$identidad_genero_r, times = sapply(strsplit(base_antropologia$ea_09, ",\\s*"), length))
base_antropologia$identidad_genero_r
base_antropologia$identidad_genero
base_antropologia$identidad_genero
base_antropologia$ea_06_nivel_estres_ultimo_semestre
summarytools::ctable(x = base_antropologia$ea_06_nivel_estres_ultimo_semestre_r, y = base_antropologia$identidad_genero_r)
ctable( x = ea_06_nivel_estres_ultimo_semestre_r, y = identidad_genero_r, prop = "c", justify = "l")
ctable( x = base_antropologia$ea_06_nivel_estres_ultimo_semestre_r, y = base_antropologia$identidad_genero_r, prop = "c", justify = "l")
identidad_genero_y_estres <- ctable( x = datos$religion, y = datos$raza, prop = "c", justify = "l")
identidad_genero_y_estres <- ctable( x = base_antropologia$ea_06_nivel_estres_ultimo_semestre_r, y = base_antropologia$identidad_genero_r, prop = "c", justify = "l")
View(identidad_genero_y_estres)
identidad_genero_y_estres
View(libro_codigos)
# Aseguramos que las columnas sean tratadas como caracteres
base_antropologia$ea_06_nivel_estres_ultimo_semestre_r <- as.character(base_antropologia$ea_06_nivel_estres_ultimo_semestre_r)
base_antropologia$identidad_genero_r <- as.character(base_antropologia$identidad_genero_r)
# Creamos un nuevo DataFrame con las respuestas e identidades
data_cruzada <- data.frame(Respuesta = respuestas_ea_06, IdentidadGenero = identidades)
# Creamos un nuevo DataFrame con las respuestas e identidades
data_cruzada <- data.frame(Estres = ea_06_nivel_estres_ultimo_semestre_r, identidad_genero_r = Identidades)
# Creamos un nuevo DataFrame con las respuestas e identidades
data_cruzada <- data.frame(Estres = base_antropologia$ea_06_nivel_estres_ultimo_semestre_r, base_antropologia$identidad_genero_r = Identidades)
# Aseguramos que las columnas sean tratadas como caracteres
base_antropologia$ea_06_nivel_estres_ultimo_semestre_r <- as.character(base_antropologia$ea_06_nivel_estres_ultimo_semestre_r)
base_antropologia$identidad_genero_r <- as.character(base_antropologia$identidad_genero_r)
# Creamos un nuevo DataFrame con las respuestas e identidades
data_cruzada <- data.frame(Estres = base_antropologia$ea_06_nivel_estres_ultimo_semestre_r,
IdentidadGenero = base_antropologia$identidad_genero_r)
View(data_cruzada)
# Calcular frecuencias y porcentajes
tabla_porcentajes <- data_cruzada %>%
select(Estres, IdentidadGenero) %>%
droplevels() %>%
table() %>%
addmargins(., 2) %>%
prop.table(., 2) %>%
round(4) * 100
# Convertir la matriz a un data frame para manejar más fácilmente
df_porcentajes <- as.data.frame.matrix(tabla_porcentajes)
# Agregar una fila de totales al data frame
df_porcentajes <- bind_rows(df_porcentajes, Total = colSums(df_porcentajes))
# Mostrar el resultado
print(df_porcentajes)
# Prueba de chi-cuadrado
ctable(x = data_cruzada$Estres, y = data_cruzada$IdentidadGenero, prop = "c", justify = "l", chisq = TRUE)
# Mostrar el resultado
print(df_porcentajes)
ctable(x = data_cruzada$Estres, y = data_cruzada$IdentidadGenero, prop = "c", justify = "l", chisq = TRUE)
# Aseguramos que las columnas sean tratadas como caracteres
base_antropologia$ea_06_nivel_estres_ultimo_semestre_r <- as.character(base_antropologia$ea_06_nivel_estres_ultimo_semestre_r)
base_antropologia$identidad_genero_r <- as.character(base_antropologia$identidad_genero_r)
# Creamos un nuevo DataFrame con las respuestas e identidades
data_cruzada <- data.frame(Estres = base_antropologia$ea_06_nivel_estres_ultimo_semestre_r,
IdentidadGenero = base_antropologia$identidad_genero_r)
# Calcular frecuencias y porcentajes
tabla_porcentajes <- data_cruzada %>%
select(Estres, IdentidadGenero) %>%
droplevels() %>%
table() %>%
addmargins(., 2) %>%
prop.table(., 2) %>%
round(4) * 100
pacman::p_load(tidyverse,# Universo de paquetes : tidyr, dplyr, ggplot2,readr,purrr,tibble, stringr, forcats
openxlsx,#leer archivos xlsx
readxl,# leer archivos xl      #dos formatos de excel xlsx y xl
janitor,#limpieza de datos
writexl,#Guardar tablas formato excel
DataExplorer) #Exploración rápida
pacman::p_load(tidyverse, openxlsx, readxl,readr,janitor, forcats, writexl, DataExplorer,
datos,  knitr, gt, summarytools, ggthemes, hrbrthemes, foreign, DescTools, ineq)
pacman::p_load(tidyverse,# Universo de paquetes : tidyr, dplyr, ggplot2,readr,purrr,tibble, stringr, forcats
openxlsx,#leer archivos xlsx
readxl,# leer archivos xl      #dos formatos de excel xlsx y xl
janitor,#limpieza de datos
writexl,#Guardar tablas formato excel
DataExplorer) #Exploración rápida
pacman::p_load(tidyverse, openxlsx, readxl,readr,janitor, forcats, writexl, DataExplorer,
datos,  knitr, gt, summarytools, ggthemes, hrbrthemes, foreign, DescTools, ineq)
# 1. Instalo y abro paquetes -------------------------------------------------
install.packages("pacman")
install.packages("pacman")
base_antropologia <- read.xlsx("base_antropologia_limpia.xlsx")
libro_codigos<- read.xlsx("Métodos Cuantitativos III (respuestas).xlsx") # dejo una base sin limpiar para observar nombres de preguntas
# a) Distribución de Frecuencias
n_encuestador_t <- freq(base_antropologia$n_encuestador, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
freq(base_antropologia$n_encuestador, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb() %>%
kable(col.names = c("Encuestador/a", "Frecuencia", "%", "% Acumulado"),
caption = "Encuestas por Encuestador/a",
format = "html", digits = 2) %>%  #le doy formate con kable
kable_classic(full_width = F, html_font = "Cambria") %>%
save_kable(file = "outputs/n_encuestador.png", zoom = 3)
install.packages("kableExtra")
library(kableExtra)
freq(base_antropologia$n_encuestador, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb() %>%
kable(col.names = c("Encuestador/a", "Frecuencia", "%", "% Acumulado"),
caption = "Encuestas por Encuestador/a",
format = "html", digits = 2) %>%  #le doy formate con kable
kable_classic(full_width = F, html_font = "Cambria") %>%
save_kable(file = "outputs/n_encuestador.png", zoom = 3)
# b) realización de gráfico
# renombro nombre de mi tabla
n_encuestador_t <-  n_encuestador_t %>%
rename(Nombre = value, Porcentaje= pct, Frecuencia = freq)
# realizo gráfico
n_encuestador_g <- ggplot(n_encuestador_t, aes(x = Frecuencia, y = fct_reorder(Nombre, Frecuencia), fill= Nombre)) +
geom_col() +
labs(title = "Encuestas por Encuestador/a",
subtitle = "según datos de Encuestas Estudiantes Antropología 2024",
x = "%",  # Esto establece el título del eje x, pero no afecta las etiquetas dentro del gráfico
y = "Nombre del Encuestador/a") +
geom_text(aes(label = round(Frecuencia, 1)),  # Ahora esto añade etiquetas a todas las barras
hjust = 1, size = 3, nudge_x = -0.9, fontface= "bold", color = "white") +
scale_fill_viridis_d(option = "C", guide = "none") +
theme_ipsum()
ggsave("outputs/n_encuestador_g.png", plot = n_encuestador_g, width = 10, height = 7, dpi = 300)
# frecuencia
identidad_genero_t <- freq(base_antropologia$identidad_genero, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
freq(base_antropologia$identidad_genero, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb() %>%
kable(col.names = c("Encuestador/a", "Frecuencia", "%", "% Acumulado"),
caption = "Identidad de género",
format = "html", digits = 2) %>%  #le doy formate con kable
kable_classic(full_width = F, html_font = "Cambria") %>%
save_kable(file = "outputs/identidad_genero.png", zoom = 3)
# realizo gráfico
identidad_genero_g <- ggplot(identidad_genero_t, aes(x = Frecuencia, y = fct_reorder(Nombre, Frecuencia), fill= Nombre)) +
geom_col() +
labs(title = "Identidad de género",
subtitle = "según datos de Encuestas Estudiantes Antropología 2024",
x = "%",  # Esto establece el título del eje x, pero no afecta las etiquetas dentro del gráfico
y = "Identidad de género") +
geom_text(aes(label = round(Frecuencia, 1)),  # Ahora esto añade etiquetas a todas las barras
hjust = 1, size = 3, nudge_x = -0.9, fontface= "bold", color = "white") +
scale_fill_viridis_d(option = "C", guide = "none") +
theme_ipsum()
ggsave("outputs/identidad_genero_g.png", plot = identidad_genero_g, width = 10, height = 7, dpi = 300)
View(identidad_genero_t)
# realizo gráfico
identidad_genero_g <- ggplot(identidad_genero_t, aes(x = Frecuencia, y = fct_reorder(value, freq), fill= value)) +
geom_col() +
labs(title = "Identidad de género",
subtitle = "según datos de Encuestas Estudiantes Antropología 2024",
x = "%",  # Esto establece el título del eje x, pero no afecta las etiquetas dentro del gráfico
y = "Identidad de género") +
geom_text(aes(label = round(freq, 1)),  # Ahora esto añade etiquetas a todas las barras
hjust = 1, size = 3, nudge_x = -0.9, fontface= "bold", color = "white") +
scale_fill_viridis_d(option = "C", guide = "none") +
theme_ipsum()
ggsave("outputs/identidad_genero_g.png", plot = identidad_genero_g, width = 10, height = 7, dpi = 300)
# frecuencia
identidad_genero_t <- freq(base_antropologia$identidad_genero, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
freq(base_antropologia$identidad_genero, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb() %>%
kable(col.names = c("Encuestador/a", "Frecuencia", "%", "% Acumulado"),
caption = "Identidad de género",
format = "html", digits = 2) %>%  #le doy formate con kable
kable_classic(full_width = F, html_font = "Cambria") %>%
save_kable(file = "outputs/identidad_genero.png", zoom = 3)
# gráfico
identidad_genero_t <-  identidad_genero_t %>%
rename(Nombre = value, Porcentaje= pct, Frecuencia = freq)
# realizo gráfico
identidad_genero_g <- ggplot(identidad_genero_t, aes(x = Frecuencia, y = fct_reorder(Nombre, Frecuencia), fill= Nombre)) +
geom_col() +
labs(title = "Identidad de género",
subtitle = "según datos de Encuestas Estudiantes Antropología 2024",
x = "%",  # Esto establece el título del eje x, pero no afecta las etiquetas dentro del gráfico
y = "Identidad de género") +
geom_text(aes(label = round(Frecuencia, 1)),  # Ahora esto añade etiquetas a todas las barras
hjust = 1, size = 3, nudge_x = -0.9, fontface= "bold", color = "white") +
scale_fill_viridis_d(option = "C", guide = "none") +
theme_ipsum()
ggsave("outputs/identidad_genero_g.png", plot = identidad_genero_g, width = 10, height = 7, dpi = 300)
# Aseguramos que las columnas sean tratadas como caracteres
base_antropologia$ea_06_nivel_estres_ultimo_semestre_r <- as.character(base_antropologia$ea_06_nivel_estres_ultimo_semestre_r)
base_antropologia$identidad_genero_r <- as.character(base_antropologia$identidad_genero_r)
# Creamos un nuevo DataFrame con las respuestas e identidades
data_cruzada <- data.frame(Estres = base_antropologia$ea_06_nivel_estres_ultimo_semestre_r,
IdentidadGenero = base_antropologia$identidad_genero_r)
# Calcular frecuencias y porcentajes
tabla_porcentajes <- data_cruzada %>%
select(Estres, IdentidadGenero) %>%
droplevels() %>%
table() %>%
addmargins(., 2) %>%
prop.table(., 2) %>%
round(4) * 100
# Convertir la matriz a un data frame para manejar más fácilmente
df_porcentajes <- as.data.frame.matrix(tabla_porcentajes)
# Agregar una fila de totales al data frame
df_porcentajes <- bind_rows(df_porcentajes, Total = colSums(df_porcentajes))
# Mostrar el resultado
print(df_porcentajes)
print(df_porcentajes)
ctable(x = data_cruzada$Estres, y = data_cruzada$IdentidadGenero, prop = "c", justify = "l", chisq = TRUE)
# Mostrar el resultado
print(df_porcentajes)
ctable(x = data_cruzada$Estres, y = data_cruzada$IdentidadGenero, prop = "c", justify = "l", chisq = TRUE)
# Aseguramos que las columnas sean tratadas como caracteres
base_antropologia$ea_06_nivel_estres_ultimo_semestre_r <- as.character(base_antropologia$ea_06_nivel_estres_ultimo_semestre_r)
base_antropologia$identidad_genero_r <- as.character(base_antropologia$identidad_genero_r)
# Creamos un nuevo DataFrame con las respuestas e identidades
data_cruzada1 <- data.frame(Estres = base_antropologia$ea_06_nivel_estres_ultimo_semestre_r,
IdentidadGenero = base_antropologia$identidad_genero_r)
# Calcular frecuencias y porcentajes
tabla_porcentajes_dt1 <- data_cruzada1 %>%
select(Estres, IdentidadGenero) %>%
droplevels() %>%
table() %>%
addmargins(., 2) %>%
prop.table(., 2) %>%
round(4) * 100
# Convertir la matriz a un data frame para manejar más fácilmente
df_porcentajes <- as.data.frame.matrix(tabla_porcentajes)
# Agregar una fila de totales al data frame
df_porcentajes <- bind_rows(df_porcentajes, Total = colSums(df_porcentajes))
# Mostrar el resultado
print(df_porcentajes)
ctable(x = data_cruzada1$Estres, y = data_cruzada$IdentidadGenero, prop = "c", justify = "l", chisq = TRUE)
# Creamos un nuevo DataFrame con las respuestas e identidades
data_cruzada1 <- data.frame(IdentidadGenero = base_antropologia$identidad_genero_r,Estres = base_antropologia$ea_06_nivel_estres_ultimo_semestre_r)
# Calcular frecuencias y porcentajes
tabla_porcentajes_dt1 <- data_cruzada1 %>%
select(Estres, IdentidadGenero) %>%
droplevels() %>%
table() %>%
addmargins(., 2) %>%
prop.table(., 2) %>%
round(4) * 100
# Convertir la matriz a un data frame para manejar más fácilmente
df_porcentajes <- as.data.frame.matrix(tabla_porcentajes)
# Agregar una fila de totales al data frame
df_porcentajes <- bind_rows(df_porcentajes, Total = colSums(df_porcentajes))
# Mostrar el resultado
print(df_porcentajes)
ctable(x = data_cruzada1$Estres, y = data_cruzada$IdentidadGenero, prop = "c", justify = "l", chisq = TRUE)
# Calcular frecuencias y porcentajes
tabla_porcentajes_dt1 <- data_cruzada1 %>%
select(IdentidadGenero,Estres) %>%
droplevels() %>%
table() %>%
addmargins(., 2) %>%
prop.table(., 2) %>%
round(4) * 100
# Creamos un nuevo DataFrame con las respuestas e identidades
data_cruzada1 <- data.frame(IdentidadGenero = base_antropologia$identidad_genero_r,Estres = base_antropologia$ea_06_nivel_estres_ultimo_semestre_r)
# Calcular frecuencias y porcentajes
tabla_porcentajes_dc1 <- data_cruzada1 %>%
select(IdentidadGenero,Estres) %>%
droplevels() %>%
table() %>%
addmargins(., 2) %>%
prop.table(., 2) %>%
round(4) * 100
# Convertir la matriz a un data frame para manejar más fácilmente
df_porcentaje_dc1 <- as.data.frame.matrix(tabla_porcentajes)
# Agregar una fila de totales al data frame
df_porcentajes <- bind_rows(df_porcentajes_dc1, Total = colSums(df_porcentajes_dt1))
# Convertir la matriz a un data frame para manejar más fácilmente
df_porcentaje_dc1 <- as.data.frame.matrix(tabla_porcentajes)
# Agregar una fila de totales al data frame
df_porcentaje_dc1 <- bind_rows(df_porcentajes_dc1, Total = colSums(df_porcentajes_dt1))
# Convertir la matriz a un data frame para manejar más fácilmente
df_porcentaje_dc1 <- as.data.frame.matrix(tabla_porcentajes)
# Agregar una fila de totales al data frame
df_porcentaje_dc1 <- bind_rows(df_porcentajes_dc1, Total = colSums(df_porcentajes_dt1))
# Convertir la matriz a un data frame para manejar más fácilmente
df_porcentaje_dc1 <- as.data.frame.matrix(tabla_porcentajes_dc1)
# Agregar una fila de totales al data frame
df_porcentaje_dc1 <- bind_rows(df_porcentajes_dc1, Total = colSums(df_porcentajes_dt1))
