<<<<<<< HEAD
#recodifico
base_antropologia <- base_antropologia %>%
mutate(ea_07_efecto_estres_rendimiento_r=case_when(ea_07_efecto_estres_rendimiento == "Mucho" ~ "Bastante",
ea_07_efecto_estres_rendimiento == "Bastante" ~ "Bastante",
ea_07_efecto_estres_rendimiento == "Moderado" ~ "Moderadamente",
ea_07_efecto_estres_rendimiento == "Poco" ~ "Moderadamente"
))
table(base_antropologia$ea_07_efecto_estres_rendimiento_r)
base_antropologia <- base_antropologia %>%
mutate(ea_07_efecto_estres_rendimiento_r= factor(ea_07_efecto_estres_rendimiento_r, levels = c("Moderadamente",
"Bastante"
), ordered = TRUE))
#observo
table(base_antropologia$ea_07_efecto_estres_rendimiento_r)
# ea_08_puede_identificar_por_si_mismo_cuando_se_siente_estresado_debidos_a_factores_relacionados_con_el_ambito_universitario",
unique(base_antropologia$ea_08)
pacman::p_load(tidyverse,# Universo de paquetes : tidyr, dplyr, ggplot2,readr,purrr,tibble, stringr, forcats
openxlsx,#leer archivos xlsx
readxl,# leer archivos xl      #dos formatos de excel xlsx y xl
janitor,#limpieza de datos
writexl,#Guardar tablas formato excel
DataExplorer) #Exploración rápida
pacman::p_load(tidyverse, openxlsx, readxl,readr,janitor, forcats, writexl, DataExplorer,
datos,  knitr, gt, summarytools, ggthemes, hrbrthemes, foreign, DescTools, ineq)
# 2. Importo archivo y lo asigno a environment ----------------------------
base_antropologia <- read.xlsx("Métodos Cuantitativos III (respuestas).xlsx")
libro_codigos<- read.xlsx("Métodos Cuantitativos III (respuestas).xlsx") # dejo una base sin limpiar para observar nombres de preguntas
freq(base_antropologia$sd_05, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
#3.1. Limpieza inicial ####
base_antropologia <- janitor::clean_names(base_antropologia) #con esto transformo todo a minúscula, quito tildes, saco signos, borro espacios
names(base_antropologia) # queda mucho mejor
#3.2. Observación de general de base ####
nrow(base_antropologia) #147 cantidad de casos
ncol(base_antropologia) #50 cantidad de variables
sapply(base_antropologia, FUN = class) # sapply: realiza un a función a varias variables
str(base_antropologia) #estructura del objeto base de datos
#3.2.Cambio nombre de variables ####
#extraigo el nombre de todas las variables
names (base_antropologia)
# Lista completa de nombres de variables
nombres_de_variables <- c(
"marca_temporal",
"direccion_de_correo_electronico",
"cual_es_el_nombre_de_su_encuestadxr",
"sd_01_usted_se_encuentra_cursando_la_carrera_de_antropologia",
"sd_02_se_entiende_identidad_de_genero_como_la_vivencia_interna_e_individual_del_genero_tal_como_cada_persona_la_siente_profundamente_la_cual_podria_corresponder_o_no_con_el_sexo_asignado_al_momento_del_nacimiento_asi_por_un_lado_las_personas_cigenero_se_identifican_con_la_identidad_de_genero_que_les_asignaron_al_nacer_y_no_buscan_transitar_de_genero_y_por_otro_lado_las_personas_trans_no_se_identifican_con_la_identidad_de_genero_que_les_asignaron_al_nacer_y_por_lo_tanto_transitan_de_genero_para_manifestar_el_que_realmente_les_identifica_segun_estas_definiciones_cual_es_su_identidad_de_genero",
"sd_03_que_edad_tiene",
"sd_04_en_que_ano_ingreso_a_la_carrera",
"sd_05_en_que_comuna_reside",
"sd_06_en_la_sociedad_comunmente_existen_distintos_grupos_o_clases_sociales_las_personas_de_clase_social_alta_son_las_que_tienen_los_ingresos_mas_altos_el_mayor_nivel_de_educacion_y_los_trabajos_mas_valorados_las_personas_de_clase_social_baja_son_las_que_tienen_los_ingresos_mas_bajos_el_menor_nivel_de_educacion_y_los_trabajos_menos_valorados_entre_estas_clases_existen_otras_intermedias_segun_su_opinion_a_cual_de_los_siguientes_grupos_o_clases_sociales_pertenece_usted",
"sd_07_indique_el_maximo_nivel_educativo_completado_obtenido_por_su_padre_o_figura_paterna",
"sd_08_indique_el_maximo_nivel_educativo_completado_obtenido_por_su_madre_o_figura_materna",
"sd_09_indique_el_ultimo_tipo_de_establecimiento_educativo_que_usted_asistio_al_realizar_su_ensenanza_media",
"ea_01_cuantas_horas_dedica_aproximadamente_al_estudio_y_a_la_realizacion_de_trabajos_universitarios_fuera_del_aula_por_cada_dia_una_semana_habil_esto_es_de_lunes_a_viernes_por_ejemplo_si_lunes_y_martes_suelo_estudiar_mas_o_menos_3_horas_miercoles_5_horas_y_finalmente_jueves_y_viernes_suelo_estudiar_2_horas_el_total_de_horas_es_15_dividido_por_15_por_5_me_da_3_deberia_marcar_la_alternativa_b_3_o_4_horas",
"ea_02_cuantas_horas_dedica_aproximadamente_al_estudio_cada_dia_a_lo_largo_del_fin_de_semana_sabado_y_domingo",
"ea_03_como_describiria_su_carga_academica_actual",
"ea_04_en_el_ultimo_semestre_finalizado_aproximadamente_que_promedio_de_notas_ha_obtenido_considere_el_ultimo_semestre_finalizado_como_el_segundo_semestre_del_ano_2023",
"ea_05_que_tan_satisfecho_esta_con_tu_rendimiento_academico_en_el_ultimo_semestre_finalizado_considere_el_ultimo_semestre_finalizado_como_el_segundo_semestre_del_ano_2023",
"ea_06_en_una_escala_del_1_al_5_donde_1_es_minimo_estres_y_5_es_maximo_estres_como_calificaria_su_nivel_de_estres_en_la_universidad_en_el_ultimo_semestre_finalizado",
"ea_07_en_que_medidas_el_estres_afecta_su_rendimiento_academico",
"ea_08_puede_identificar_por_si_mismo_cuando_se_siente_estresado_debidos_a_factores_relacionados_con_el_ambito_universitario",
"ea_09_cuando_esta_en_periodos_de_evaluaciones_academicas_ha_tenido_alguno_de_estos_sintomas_seleccione_todas_las_alternativas_que_correspondan_con_su_caso",
"ea_10_que_estrategias_utiliza_con_mayor_frecuencia_para_manejar_el_estres_academico_seleccione_todas_las_alternativas_que_correspondan_con_su_caso",
"re_01_como_califica_su_creencia_de_un_ser_supremo_o_deidades",
"re_02_cual_es_su_afiliacion_religiosa_o_creencia_espiritual_selecciona_una_opcion",
"re_03_con_que_frecuencia_acude_a_su_religion_o_a_instancias_en_donde_conectes_con_tu_espiritualidad_rezo_oracion_meditacion_u_otro",
"re_04_asiste_con_regularidad_a_algun_lugar_destinado_al_culto_religioso",
"re_05_consideras_que_hay_una_influencia_de_la_religion_o_la_espiritualidad_en_sus_decisiones_eticas_y_morales_que_toma_en_su_vida_cotidiana",
"rs_01_cuantas_horas_al_dia_pasa_en_redes_sociales_debes_considerar_la_suma_de_todas_las_redes_sociales_que_utilices",
"rs_02_cuales_son_las_principales_razones_por_las_que_utiliza_redes_sociales_seleccione_todas_las_alternativas_que_correspondan_con_su_caso",
"rs_03_experimenta_una_sensacion_de_necesidad_o_expectativa_social_de_mantener_una_presencia_activa_en_sus_redes_sociales_mediante_la_publicacion_de_fotos_videos_etcetera",
"rs_04_como_gestiona_el_estres_relacionado_con_el_uso_de_redes_sociales",
"rs_05_que_red_social_sueles_ocupar_con_mayor_frecuencia_seleccione_una_unica_respuesta",
"rs_06_cual_es_la_segunda_red_social_que_sueles_ocupar_con_frecuencia",
"to_01_cuanto_tiempo_libre_considera_que_ha_tenido_por_semana_para_dedicarse_a_actividades_fuera_del_ambito_universitario_considere_actividades_fuera_del_ambito_universitario_tales_como_deporte_entretenimiento_salidas_fiestas_etc",
"to_02_considere_esta_definicion_de_ocio_antes_de_contestar_esta_y_las_siguientes_preguntas_el_ocio_se_puede_entender_como_el_tiempo_del_que_dispone_una_persona_para_distraerse_e_idealmente_disfrutar_de_un_momento_agradable_en_su_agenda_personal_o_tiempo_libre_tales_como_salir_tener_vida_social_hacer_deporte_o_practicas_de_consumo_o_participacion_cultural_leer_escuchar_o_tocar_musica_estar_en_internet_excluya_trabajo_y_estudio_ahora_que_ya_comprende_a_que_se_refiere_el_ocio_en_esta_encuesta_responda_cuantos_dias_a_la_semana_incluyendo_semana_y_fin_semana_realiza_actividades_de_ocio",
"to_03_administra_su_tiempo_de_forma_optima_para_equilibrar_tus_obligaciones_academicas_con_las_actividades_de_ocio",
"to_04_cuales_de_estas_actividades_prefiere_realizar_en_su_tiempo_de_ocio_seleccione_un_maximo_de_3_alternativas",
"to_05_forma_parte_de_un_club_colectivo_o_taller_donde_se_realicen_actividades_las_actividades_previamente_mencionadas",
"to_06_que_tan_importante_es_para_usted_el_tiempo_dedicado_a_actividades_de_ocio",
"ma_01_en_una_escala_del_1_10_siendo_el_10_el_mayor_nivel_de_informacion_y_el_1_el_menor_que_tan_informado_se_encuentra_con_respecto_a_la_problematica_del_exceso_de_basura_en_las_calles",
"ma_02_en_una_escala_del_1_al_10_que_tan_interesado_estaria_en_participar_en_actividades_educativas_que_amplien_su_conocimiento_sobre_gestion_de_residuos_y_problemas_relacionados",
"ma_03_ha_participado_en_algun_grupo_organizacion_o_proyecto_ecologicos_relacionados_con_el_cuidado_y_preservacion_del_medio_ambiente",
"ma_04_ha_participado_en_eventos_o_actividades_comunitarias_relacionadas_a_la_difusion_de_informacion_con_respecto_a_los_problemas_medioambientales_dentro_de_los_ultimos_tres_meses_meses_tales_como_charlas_ferias_ecologicas_talleres_practicos_o_campanas_especificas",
"ma_05_con_que_frecuencia_adquiere_productos_sostenibles_o_amigables_con_el_medio_ambiente_teniendo_en_cuenta_la_reduccion_de_residuos_generados_por_sus_envases_ttales_como_botellas_reciclables_productos_a_granel_empaques_minimalistas_o_envases_reciclables",
"cm_01_aproximadamente_con_que_frecuencia_suele_escuchar_musica_durante_la_semana_seleccione_una_unica_respuesta_considere_cada_numero_como_la_cantidad_de_dias_que_escucha_musica",
"cm_02_aproximadamente_cuantas_horas_al_dia_escucha_musica_seleccione_una_unica_respuesta",
"cm_03_que_genero_musical_suele_escuchar_con_frecuencia_seleccione_una_unica_respuesta",
"cm_04_cual_es_el_segundo_genero_musical_que_suele_escuchar_con_frecuencia_seleccione_una_unica_respuesta",
"cm_05_donde_suele_escuchar_musica_habitualmente_seleccione_mas_de_una_alternativa_si_corresponde",
"cm_06_que_tan_importante_es_la_musica_para_ti_en_su_dia_a_dia_seleccione_una_unica_respuesta"
)
# Extraer las primeras cuatro letras de cada nombre de variable
primeras_5_letras <- substr(nombres_de_variables, 1, 5)
#primer argumento - string = de donde saco los nombres: el vector creado
#segundo argumento - start = desde que posición extraigo (p)
#tercer argumento - end= hasta donde (1)
#renombro considerando todas las columnas elegidas asignando nuevos nombres
base_antropologia <- base_antropologia %>%
rename_at(vars(nombres_de_variables), ~ primeras_5_letras) #recodificación múltiples con un vector
#renombro algunas variables en específico
names(base_antropologia)
#posibilidad de renombrar uno por uno las variables de interés. # primero nuevo nombre y luego nombre antiguo
#estructura: base_datos <- base_datos %>% dplyr::rename(nombrenuevo=nombre_antiguo,nombre_nuevo=nombre_antiguo)
base_antropologia <- base_antropologia %>% dplyr::rename (n_encuestador = cual_)
names(base_antropologia)
#3.3.Variables de identificación y sociodemográficas ####
# 3.3.1. Variable Nombre Encuestador ####
# realizada por SAMANTA.
# Por ser una pregunta abierta hago una limpieza de categorías
# Elimino caracteres latinos, las pongo todas en minúsculas, reemplazo espacios por guión bajo.
=======
nivel_educacion_padre == "tecnico_nivel_superior_(carreras_1_a_3_anos)" ~"Educacion Tecnica",
nivel_educacion_padre ==  "educacion_media_tecnica_profesional" ~ "Educacion Tecnica",
nivel_educacion_padre == "educacion_media" ~ "Educacion Media",
nivel_educacion_padre == "educacion_basica_" ~ "Educacion Basica",
nivel_educacion_padre == "ensenanza_basica_completa" ~ "Educacion Basica",
nivel_educacion_padre == "educacion_basica_completa_" ~ "Educacion Basica",
nivel_educacion_padre == "educacion_basica_hasta_sexto_" ~ "Educacion Basica",
nivel_educacion_padre == "no_se_"  ~ NA,
nivel_educacion_padre == "no_se" ~ NA,
nivel_educacion_padre == "sin_figura_paterna_" ~ NA,
TRUE ~ nivel_educacion_padre))
unique(base_antropologia$nivel_educacion_padre)
table(base_antropologia$nivel_educacion_padre)
unique(base_antropologia$sd_08) # JOAQUÍN
>>>>>>> 306605e23d8e78738845b1e7f7526325483f0cce
base_antropologia <- base_antropologia %>%
mutate(
sd_08 = stringi::stri_trans_general(sd_08, "Latin-ASCII"),
sd_08 = tolower(sd_08),
sd_08 = gsub(" ", "_", sd_08),
sd_08 = gsub("-+$", "", sd_08),
)
base_antropologia <- base_antropologia %>% dplyr::rename(nivel_educacion_madre= sd_08)
base_antropologia <- base_antropologia %>%
mutate(nivel_educacion_madre=case_when(nivel_educacion_madre ==  "profesional_(carreras_4_o_mas_anos)" ~ "Educacion Profesional",
nivel_educacion_madre == "magister_o_maestria" ~ "Educacion Profesional",
nivel_educacion_madre == "doctorado" ~ "Educacion Profesional",
nivel_educacion_madre == "tecnico_nivel_superior_(carreras_1_a_3_anos)" ~"Educacion Tecnica",
nivel_educacion_madre ==  "educacion_media_tecnica_profesional" ~ "Educacion Tecnica",
nivel_educacion_madre == "educacion_media" ~ "Educacion Media",
nivel_educacion_madre == "profesional_incompleto" ~ "Educacion Media",
nivel_educacion_madre == "educacion_media_incompleta" ~ "Educacion Básica",
TRUE ~ nivel_educacion_madre))
unique(base_antropologia$nivel_educacion_madre)
table(base_antropologia$nivel_educacion_madre)
unique(base_antropologia$sd_09)
names(base_antropologia)
# Estrés académico
unique(base_antropologia$ea_01)
unique(base_antropologia$ea_02)
# ea_01_cuantas_horas_dedica_aproximadamente_al_estudio_y_a_la_realizacion_de_trabajos_universitarios_fuera_del_aula_por_cada_dia_una_semana_habil_esto_es_de_lunes_a_viernes_por_ejemplo_si_lunes_y_martes_suelo_estudiar_mas_o_menos_3_horas_miercoles_5_horas_y_finalmente_jueves_y_viernes_suelo_estudiar_2_horas_el_total_de_horas_es_15_dividido_por_15_por_5_me_da_3_deberia_marcar_la_alternativa_b_3_o_4_horas",
class(base_antropologia$ea_01) # transformar en factor y ordenar: NOEL
#primero la cambio el nombre a la variable
base_antropologia <- base_antropologia %>% dplyr::rename (horas_estudio_semana = "ea_01"  )
names(base_antropologia)
unique(base_antropologia$horas_estudio_semana)
table(base_antropologia$horas_estudio_semana)
#cambio a factor
class(base_antropologia$horas_estudio_semana)
base_antropologia <- base_antropologia %>%
mutate(horas_estudio_semana = as.factor(horas_estudio_semana))
# ea_02_cuantas_horas_dedica_aproximadamente_al_estudio_cada_dia_a_lo_largo_del_fin_de_semana_sabado_y_domingo",
unique(base_antropologia$ea_02) # transformar en factor y ordenar: NOEL
#primero la cambio el nombre a la variable
base_antropologia <- base_antropologia %>% dplyr::rename (horas_estudio_fin_semana = "ea_02"  )
names(base_antropologia)
#cambio a factor
class(base_antropologia$horas_estudio_fin_semana)
base_antropologia <- base_antropologia %>%
mutate(horas_estudio_fin_semana = as.factor(horas_estudio_fin_semana))
# ea_03_como_describiria_su_carga_academica_actual"
unique(base_antropologia$ea_03) # transformar en factor y ordenar: SAMANTA
unique(base_antropologia$ea_03) # transformar en factor y ordenar: SAMANTA
base_antropologia <- base_antropologia %>% dplyr::rename(descripcion_carga_academica = ea_03)
names(base_antropologia)
class(base_antropologia$descripcion_carga_academica)
base_antropologia <- base_antropologia %>%
mutate(descripcion_carga_academica = as.factor(descripcion_carga_academica))
unique(base_antropologia$descripcion_carga_academica)
# ea_04_en_el_ultimo_semestre_finalizado_aproximadamente_que_promedio_de_notas_ha_obtenido_considere_el_ultimo_semestre_finalizado_como_el_segundo_semestre_del_ano_2023",
unique(base_antropologia$ea_04) # recodificar a número, recodificar a rangos: MATIAS
# ea_05_que_tan_satisfecho_esta_con_tu_rendimiento_academico_en_el_ultimo_semestre_finalizado_considere_el_ultimo_semestre_finalizado_como_el_segundo_semestre_del_ano_2023",
unique(base_antropologia$ea_05) # recodificar en 2: SAMANTA
unique(base_antropologia$ea_05) # recodificar en 2: SAMANTA
base_antropologia <- base_antropologia %>% dplyr::rename(satisfaccion_rendimiento_academico = ea_05)
names(base_antropologia)
unique(base_antropologia$satisfaccion_rendimiento_academico)
table(base_antropologia$satisfaccion_rendimiento_academico)
class(base_antropologia$satisfaccion_rendimiento_academico)
base_antropologia <- base_antropologia %>%
mutate(satisfaccion_rendimiento_academico = as.factor(satisfaccion_rendimiento_academico))
base_antropologia <- base_antropologia %>%
mutate(satisfaccion_rendimiento_academico = case_when(satisfaccion_rendimiento_academico== "Insatisfecho" ~ "Insatisfecho",
satisfaccion_rendimiento_academico== "Muy insatisfecho" ~ "Insatisfecho",
satisfaccion_rendimiento_academico== "Muy Satisfecho" ~ "Satisfecho",
satisfaccion_rendimiento_academico== "Satisfecho" ~ "Satisfecho"))
table(base_antropologia$satisfaccion_rendimiento_academico)
# ea_06_en_una_escala_del_1_al_5_donde_1_es_minimo_estres_y_5_es_maximo_estres_como_calificaria_su_nivel_de_estres_en_la_universidad_en_el_ultimo_semestre_finalizado",
unique(base_antropologia$ea_06) # recodificar en 2: Joaquín
base_antropologia <- base_antropologia %>% dplyr::rename(nivel_estres_ultimo_semestre = ea_06)
base_antropologia <- base_antropologia %>%
mutate(nivel_estres_ultimo_semestre=case_when(nivel_estres_ultimo_semestre == 1 ~ "Estres Moderado",
nivel_estres_ultimo_semestre == 2 ~ "Estres Moderado",
nivel_estres_ultimo_semestre == 3 ~ "Estres Moderado",
nivel_estres_ultimo_semestre == 4 ~ "Estres Alto",
nivel_estres_ultimo_semestre == 5 ~ "Estres Alto",
))
base_antropologia <- base_antropologia %>%
mutate(nivel_estres_ultimo_semestre= factor(nivel_estres_ultimo_semestre, levels = c("Estres Moderado",
"Estres Alto" ), ordered = TRUE))
unique(base_antropologia$nivel_estres_ultimo_semestre)
table(base_antropologia$nivel_estres_ultimo_semestre)
# ea_07_en_que_medidas_el_estres_afecta_su_rendimiento_academico",
unique(base_antropologia$ea_07) # recodificar en 2: Joaquín
ase_antropologia <- base_antropologia %>% dplyr::rename(efecto_estres_rendimiento = ea_07)
base_antropologia <- base_antropologia %>%
mutate(efecto_estres_rendimiento=case_when(efecto_estres_rendimiento == "Mucho" ~ "Bastante",
efecto_estres_rendimiento == "Bastante" ~ "Bastante",
efecto_estres_rendimiento == "Moderado" ~ "Moderamante",
efecto_estres_rendimiento == "Poco" ~ "Moderamante"
))
unique(base_antropologia$efecto_estres_rendimiento)
table(base_antropologia$efecto_estres_rendimiento)
# ea_08_puede_identificar_por_si_mismo_cuando_se_siente_estresado_debidos_a_factores_relacionados_con_el_ambito_universitario",
unique(base_antropologia$ea_08)
# ea_09_cuando_esta_en_periodos_de_evaluaciones_academicas_ha_tenido_alguno_de_estos_sintomas_seleccione_todas_las_alternativas_que_correspondan_con_su_caso",
unique(base_antropologia$ea_09) # SEBASTIÁN
class(base_antropologia$ea_09)
# RESPUESTA MÚLTIPLE
# ea_09_cuando_esta_en_periodos_de_evaluaciones_academicas_ha_tenido_alguno_de_estos_sintomas_seleccione_todas_las_alternativas_que_correspondan_con_su_caso",
unique(base_antropologia$ea_09) # SEBASTIÁN
class(base_antropologia$ea_09)
#separo las respuestas y creo un vector que las lista
respuestas <- strsplit(base_antropologia$ea_09, ",") # separo las respuestas que tienen coma (,)
respuestas <- unlist(respuestas) #las unlisto, las saco de una lista
unique(respuestas)
#observo las respuestas
freq(respuestas, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
#elimino espacio antes de primera letra
respuestas_limpio <- trimws(respuestas, which = "left")
# obtengo las frecuencias de mis preguntas de respuesta múltiple
freq(respuestas_limpio, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
#Guardo para graficar
ea_09_graf <- freq(respuestas_limpio, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
ea_09_tabla <- freq(respuestas_limpio, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb() %>%
kable(col.names = c("Síntoma", "Frecuencia", "%", "% Acumulado"),
caption = "Síntomas de Estress",
format = "html", digits = 2) %>%  #le doy formate con kable
kable_classic(full_width = F, html_font = "Cambria") %>%
save_kable(file = "outputs/ea_09_tabla.png", zoom = 3)
# renombro nombre de mi tabla
ea_09_graf <-  ea_09_graf %>%
rename(Problema = value, Porcentaje= pct)
# realizo gráfico
g_ea_09_graf <- ggplot(ea_09_graf, aes(x = Porcentaje, y = fct_reorder(Problema, Porcentaje), fill= Problema)) +
geom_col() +
labs(title = "Síntomas de Estrés Académico",
subtitle = "según datos de Encuestas Estudiantes Antropología 2024",
x = "%",
y = "Síntoma") +
geom_text(data = ea_09_graf %>% filter(rank(-Porcentaje) <= 12), # Solo añadir texto a las primeras 8 categorías
aes(label = ifelse(rank(-Porcentaje) <= 12, paste0(round(Porcentaje, 1), "%"), "")),
hjust = 1, size = 3, nudge_x = -.9, fontface= "bold", color = "white") +
scale_fill_viridis_d(option = "C", guide = "none") +
theme_ipsum()
ggsave("outputs/g_ea_09_graf.png", plot = g_ea_09_graf, width = 10, height = 7, dpi = 300)
# ea_10_que_estrategias_utiliza_con_mayor_frecuencia_para_manejar_el_estres_academico_seleccione_todas_las_alternativas_que_correspondan_con_su_caso",
unique(base_antropologia$ea_10) # NOEL
unique(base_antropologia$ea_10)
class(base_antropologia$ea_10)
=======
#Observo lo realizado
unique(base_antropologia$edad_r)
table(base_antropologia$edad_r)
# 3.3.4. Variable Ingreso a Carrera####
# Realizada por Joaquín
#Observo
unique(base_antropologia$sd_04)
#Renombro
base_antropologia <- base_antropologia %>% dplyr::rename(año_ingreso_carrera = sd_04)
#Recodifico
>>>>>>> 7d63b38b4d2fc2e12eb7c8ba353aad1965f6a4d7
base_antropologia <- base_antropologia %>%
mutate(año_ingreso_carrera_r=case_when(año_ingreso_carrera == 2019 ~ "pre-pandemia",
año_ingreso_carrera == 2020 ~ "Pandemia",
año_ingreso_carrera == 2021 ~ "Pandemia",
año_ingreso_carrera == 2022 ~ "post-pandemia",
año_ingreso_carrera == 2023 ~ "post-pandemia",
año_ingreso_carrera == 2024 ~ "post-pandemia"
))
<<<<<<< HEAD
#separo las respuestas y creo un vector que las lista
respuestas_ea_10 <- unlist(strsplit(base_antropologia$ea_10, ", ")) # separo las respuestas que tienen coma (,)
#hice la lista altiro
unique(respuestas_ea_10)
#observo las respuestas
freq(respuestas_ea_10, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
#elimino espacio antes de primera letra
respuestas_ea_10_limpio <- trimws(respuestas_ea_10, which = "left")
# obtengo las frecuencias de mis preguntas de respuesta múltiple
freq(respuestas_ea_10_limpio, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
#Guardo para graficar
ea_10_graf <- freq(respuestas_ea_10_limpio, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
ea_10_tabla <- freq(respuestas_ea_10_limpio, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb() %>%
kable(col.names = c("Estrategias", "Frecuencia", "%", "% Acumulado"),
caption = "Estrategias del manejo del estres",
format = "html", digits = 2) %>%  #le doy formate con kable
kable_classic(full_width = F, html_font = "Cambria") %>%
save_kable(file = "outputs/ea_10_tabla.png", zoom = 3)
install.packages("kableExtra")
library(kableExtra)
ea_10_graf <-  ea_10_graf %>%
rename(Problema = value, Porcentaje= pct)
g_ea_10_graf <- ggplot(ea_10_graf, aes(x = Porcentaje, y = fct_reorder(Problema, Porcentaje), fill= Problema)) +
geom_col() +
labs(title = "Estrategias del manejo del estres",
subtitle = "según datos de Encuestas Estudiantes Antropología 2024",
x = "%",
y = "Estrategia") +
geom_text(data = ea_10_graf %>% filter(rank(-Porcentaje) <= 12), # Solo añadir texto a las primeras 8 categorías
aes(label = ifelse(rank(-Porcentaje) <= 12, paste0(round(Porcentaje, 1), "%"), "")),
hjust = 1, size = 3, nudge_x = -.9, fontface= "bold", color = "white") +
scale_fill_viridis_d(option = "C", guide = "none") +
theme_ipsum()
ggsave("outputs/g_ea_10_graf.png", plot = g_ea_10_graf, width = 10, height = 7, dpi = 300)
write.xlsx(x = base_antropologia,file = "base_antropologia_limpia")
# ea_10_que_estrategias_utiliza_con_mayor_frecuencia_para_manejar_el_estres_academico_seleccione_todas_las_alternativas_que_correspondan_con_su_caso",
unique(base_antropologia$ea_10) # NOEL
base_antropologia <- base_antropologia %>%
mutate(ea_10_recod = sapply(strsplit(ea_10, ", "), function(respuestas) {
if (any(grepl("Técnicas de relajación", respuestas)) ||
any(grepl("Organización y planificación del tiempo", respuestas)) ||
any(grepl("Apoyo social", respuestas)) ||
any(grepl("Participar en otras actividades creativas", respuestas)) ||
any(grepl("Ejercicio físico", respuestas)) ||
any(grepl("Consulta con un profesional de salud mental", respuestas)) ||
any(grepl("Tomar descansos regulares", respuestas))
) {
# Mantener solo las respuestas que coinciden con las categorías específicas
return(paste(respuestas[grepl(paste(c("Técnicas de relajación", "Organización y planificación del tiempo",
"Apoyo social", "Participar en otras actividades creativas",
"Ejercicio físico", "Consulta con un profesional de salud mental",
"Tomar descansos regulares"), collapse="|"), respuestas)], collapse = ", "))
} else {
# Recodificar las respuestas que no coinciden como "Otro"
return("Otro")
}
}))
ea_10_recod
base_antropologia <- base_antropologia %>%
mutate(ea_10_recod = case_when(
grepl("Técnicas de relajación", ea_10) |
grepl("Organización y planificación del tiempo", ea_10) |
grepl("Apoyo social", ea_10) |
grepl("Participar en otras actividades creativas", ea_10) |
grepl("Ejercicio físico", ea_10) |
grepl("Consulta con un profesional de salud mental", ea_10) |
grepl("Tomar descansos regulares", ea_10) ~ ea_10,
TRUE ~ "Otro"
))
ea_10_recod
base_antropologia <- base_antropologia %>%
mutate(ea_10_recod = case_when(
grepl("Técnicas de relajación", ea_10) |
grepl("Organización y planificación del tiempo", ea_10) |
grepl("Apoyo social", ea_10) |
grepl("Participar en otras actividades creativas", ea_10) |
grepl("Ejercicio físico", ea_10) |
grepl("Consulta con un profesional de salud mental", ea_10) |
grepl("Tomar descansos regulares", ea_10) ~ ea_10,
TRUE ~ "Otro"
))
unique(base_antropologia$ea_10)
=======
#Observo lo realizado
unique(base_antropologia$año_ingreso_carrera_r)
table(base_antropologia$año_ingreso_carrera_r)
# 3.3.5. Variable Comuna de Residencia - FALTA ####
# Realizada por Matías
unique(base_antropologia$sd_05)
freq(base_antropologia$sd_05, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
comunas <- freq(base_antropologia$sd_05, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
View(comunas)
#primero la cambio el nombre a la variable
base_antropologia <- base_antropologia %>% dplyr::rename (comuna =sd_05)
comunas <- freq(base_antropologia$comuna, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
comunas
base_antropologia <- base_antropologia %>%
mutate(
comuna = stringi::stri_trans_general(comuna, "Latin-ASCII"),  # Convierte caracteres latinos en la columna `comuna` a su equivalente ASCII
comuna = tolower(comuna),  # Convierte todos los caracteres en la columna `comuna` a minúsculas
comuna = gsub(" ", "_", comuna),  # Reemplaza espacios por guiones bajos en la columna `comuna`
)
unique(base_antropologia$comuna)
# voy a recodificar los nombres, para ello hago lo siguiente:
# a) hago un listado de los nombres
valores_unicos_a<- sort(unique(base_antropologia$comuna), decreasing = F)
#imprimo los valores ordenados, para verlos, copiarlos y recodificarlos.
print(valores_unicos_a)
#imprimo los valores ordenados, para verlos, copiarlos y recodificarlos.
print(valores_unicos_a)
base_antropologia <- base_antropologia %>%
mutate(comuna = sub("_$", "", comuna))
comunas <- freq(base_antropologia$comuna, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
freq(base_antropologia$comuna, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
comunas <- freq(base_antropologia$comuna, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
View(comunas)
# voy a recodificar los nombres, para ello hago lo siguiente:
# a) hago un listado de los nombres
valores_unicos_a<- sort(unique(base_antropologia$comuna), decreasing = F)
#imprimo los valores ordenados, para verlos, copiarlos y recodificarlos.
print(valores_unicos_a)
cat(base_antropologia$comuna, sep = "\n")
unique(base_antropologia$comuna)
#imprimo los valores ordenados, para verlos, copiarlos y recodificarlos.
print(valores_unicos_a)
# Recodificando la variable comuna en comuna_r1 según las zonas geográficas
base_antropologia <- base_antropologia %>%
mutate(comuna_r1 = case_when(
comuna %in% c("quilicura", "huechuraba", "recoleta", "conchali", "renca", "lampa", "cerro_navia") ~ "Zona Norte",
comuna %in% c("la_pintana", "puente_alto", "san_bernardo", "la_granja", "la_cisterna", "lo_espejo", "pedro_aguirre_cerda", "san_miguel", "san_joaquin", "paine") ~ "Zona Sur",
comuna %in% c("las_condes", "la_reina", "vitacura", "penalolen") ~ "Zona Oriente",
comuna %in% c("maipu", "pudahuel", "quinta_normal", "lo_prado", "estacion_central", "curacavi", "melipilla", "talagante", "calera_de_tango", "buin") ~ "Zona Poniente",
comuna %in% c("la_serena", "llay_llay", "los_andes", "rancagua", "san_felipe", "til_til") ~ "Fuera de la Región Metropolitana",
comuna %in% c("santa_lucia", "santiago_centro") ~ "Zona Centro",
comuna == "providencia" ~ "Zona Oriente", # Agregando Providencia explícitamente a Zona Oriente
comuna == "nunoa" ~ "Zona Oriente", # Agregando Ñuñoa explícitamente a Zona Oriente
TRUE ~ comuna  # Mantiene el nombre original si no está en ninguna categoría
))
comunas <- freq(base_antropologia$comuna_r1, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
freq(base_antropologia$comuna_r1, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
# Recodificando la variable comuna en comuna_r1 según las zonas geográficas
base_antropologia <- base_antropologia %>%
mutate(comuna_r1 = case_when(
comuna %in% c("quilicura", "huechuraba", "recoleta", "conchali", "renca", "lampa", "cerro_navia") ~ "Zona Norte",
comuna %in% c("la_pintana", "puente_alto", "san_bernardo", "la_granja", "la_cisterna", "lo_espejo", "pedro_aguirre_cerda", "san_miguel", "san_joaquin", "paine", "la_florida") ~ "Zona Sur",
comuna %in% c("las_condes", "la_reina", "vitacura", "penalolen", "nunoa", "providencia", "macul") ~ "Zona Oriente",
comuna %in% c("maipu", "pudahuel", "quinta_normal", "lo_prado", "estacion_central", "curacavi", "melipilla", "talagante", "calera_de_tango", "buin", "penaflor") ~ "Zona Poniente",
comuna %in% c("la_serena", "llay_llay", "los_andes", "rancagua", "san_felipe", "til_til") ~ "Fuera de la Región Metropolitana",
comuna %in% c("santa_lucia", "santiago_centro") ~ "CENTRO",
TRUE ~ comuna  # Mantiene el nombre original si no está en ninguna categoría
))
freq(base_antropologia$comuna_r1, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
# Recodificando la variable comuna en comuna_r1 según las zonas geográficas
base_antropologia <- base_antropologia %>%
mutate(comuna_r1 = case_when(
comuna %in% c("quilicura", "huechuraba", "recoleta", "conchali", "renca", "lampa", "cerro_navia") ~ "Zona Norte",
comuna %in% c("la_pintana", "puente_alto", "san_bernardo", "la_granja", "la_cisterna", "lo_espejo", "pedro_aguirre_cerda", "san_miguel", "san_joaquin", "paine", "la_florida") ~ "Zona Sur",
comuna %in% c("las_condes", "la_reina", "vitacura", "penalolen", "nunoa", "providencia", "macul") ~ "Zona Oriente",
comuna %in% c("maipu", "pudahuel", "quinta_normal", "lo_prado", "estacion_central", "curacavi", "melipilla", "talagante", "calera_de_tango", "buin", "penaflor") ~ "Zona Poniente",
comuna %in% c("la_serena", "llay_llay", "los_andes", "rancagua", "san_felipe", "til_til") ~ "Fuera de la Región Metropolitana",
comuna %in% c("santa_lucia", "santiago_centro") ~ "Zona Centro",
TRUE ~ comuna  # Mantiene el nombre original si no está en ninguna categoría
))
freq(base_antropologia$comuna_r1, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
comunas
base_antropologia <- base_antropologia %>%
mutate(comuna_distancia = case_when(
comuna %in% c("santiago_centro", "providencia", "estacion_central", "quinta_normal", "recoleta") ~ "comuna_muy_cercana",
comuna %in% c("nunoa", "san_miguel", "la_cisterna", "conchali", "lo_prado", "pedro_aguirre_cerda") ~ "comuna_cercana",
comuna %in% c("macul", "la_florida", "penalolen", "maipu", "pudahuel", "san_joaquin", "renca", "cerro_navia", "quilicura", "huechuraba", "vitacura", "las_condes", "la_reina") ~ "comuna_media_distancia",
comuna %in% c("puente_alto", "la_pintana", "san_bernardo", "buin", "talagante", "penaflor", "curacavi", "lampa", "melipilla", "calera_de_tango", "til_til") ~ "comuna_alta_distancia",
comuna %in% c("la_serena", "llay_llay", "los_andes", "rancagua", "san_felipe") ~ "Fuera de la Región Metropolitana",
TRUE ~ "Revisar comuna" # Para cualquier comuna no listada
))
freq(base_antropologia$comuna_distancia, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
View(base_antropologia)
View(comunas)
View(base_antropologia)
freq(base_antropologia$comuna_distancia, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
base_antropologia <- base_antropologia %>%
mutate(comuna_distancia = case_when(
comuna %in% c("santiago_centro", "providencia", "estacion_central", "quinta_normal", "recoleta") ~ "comuna_muy_cercana",
comuna %in% c("nunoa", "san_miguel", "la_cisterna", "conchali", "lo_prado", "pedro_aguirre_cerda") ~ "comuna_cercana",
comuna %in% c("macul", "la_florida", "penalolen", "maipu", "pudahuel", "san_joaquin", "renca", "cerro_navia", "quilicura", "huechuraba", "vitacura", "las_condes", "la_reina") ~ "comuna_media_distancia",
comuna %in% c("puente_alto", "la_pintana", "san_bernardo", "buin", "talagante", "penaflor", "curacavi", "lampa", "melipilla", "calera_de_tango", "til_til") ~ "comuna_alta_distancia",
comuna %in% c("la_serena", "llay_llay", "los_andes", "rancagua", "san_felipe") ~ "Fuera de la Región Metropolitana",
TRUE ~ "Revisar comuna" # Para cualquier comuna no listada
))
View(comunas)
View(base_antropologia)
# Filtrar las comunas que están categorizadas como "Revisar comuna"
comunas_a_revisar <- base_antropologia %>%
filter(comuna_distancia == "Revisar comuna") %>%
select(comuna) # Cambia 'comuna' al nombre de la columna que contiene los nombres de las comunas si es diferente
# Imprimir las comunas a revisar
print(comunas_a_revisar)
# recodifico por distancia a la universidad
base_antropologia <- base_antropologia %>%
mutate(comuna_distancia = case_when(
comuna %in% c("santiago_centro", "providencia", "estacion_central", "quinta_normal", "recoleta", "santa_lucia") ~ "comuna_muy_cercana",
comuna %in% c("nunoa", "san_miguel", "la_cisterna", "conchali", "lo_prado", "pedro_aguirre_cerda", "la_granja", "lo_espejo") ~ "comuna_cercana",
comuna %in% c("macul", "la_florida", "penalolen", "maipu", "pudahuel", "san_joaquin", "renca", "cerro_navia", "quilicura", "huechuraba", "vitacura", "las_condes", "la_reina") ~ "comuna_media_distancia",
comuna %in% c("puente_alto", "la_pintana", "san_bernardo", "buin", "talagante", "penaflor", "curacavi", "lampa", "melipilla", "calera_de_tango", "til_til", "paine") ~ "comuna_alta_distancia",
TRUE ~ "Revisar comuna" # Para cualquier comuna no listada
))
freq(base_antropologia$comuna_distancia, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
# Filtrar las comunas que están categorizadas como "Revisar comuna"
comunas_a_revisar <- base_antropologia %>%
filter(comuna_distancia == "Revisar comuna") %>%
select(comuna) # Cambia 'comuna' al nombre de la columna que contiene los nombres de las comunas si es diferente
# Imprimir las comunas a revisar
print(comunas_a_revisar)
# recodifico por distancia a la universidad
base_antropologia <- base_antropologia %>%
mutate(comuna_distancia = case_when(
comuna %in% c("santiago_centro", "providencia", "estacion_central", "quinta_normal", "recoleta", "santa_lucia") ~ "comuna_muy_cercana",
comuna %in% c("nunoa", "san_miguel", "la_cisterna", "conchali", "lo_prado", "pedro_aguirre_cerda", "la_granja", "lo_espejo") ~ "comuna_cercana",
comuna %in% c("macul", "la_florida", "penalolen", "maipu", "pudahuel", "san_joaquin", "renca", "cerro_navia", "quilicura", "huechuraba", "vitacura", "las_condes", "la_reina") ~ "comuna_media_distancia",
comuna %in% c("puente_alto", "la_pintana", "san_bernardo", "buin", "talagante", "penaflor", "curacavi", "lampa", "melipilla", "calera_de_tango", "til_til", "paine") ~ "comuna_alta_distancia",
TRUE ~ "Fuera de Santiago" # Para cualquier comuna no listada
))
freq(base_antropologia$comuna_distancia, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
# recodifico por distancia a la universidad
base_antropologia <- base_antropologia %>%
mutate(comuna_distancia = case_when(
comuna %in% c("santiago_centro", "providencia", "estacion_central", "quinta_normal", "recoleta", "santa_lucia") ~ "Vive muy cerca",
comuna %in% c("nunoa", "san_miguel", "la_cisterna", "conchali", "lo_prado", "pedro_aguirre_cerda", "la_granja", "lo_espejo") ~ "Vive a distancia cercana",
comuna %in% c("macul", "la_florida", "penalolen", "maipu", "pudahuel", "san_joaquin", "renca", "cerro_navia", "quilicura", "huechuraba", "vitacura", "las_condes", "la_reina") ~ "Vive a distancia media",
comuna %in% c("puente_alto", "la_pintana", "san_bernardo", "buin", "talagante", "penaflor", "curacavi", "lampa", "melipilla", "calera_de_tango", "til_til", "paine") ~ "Vive a mucha distancia",
TRUE ~ "Fuera de Santiago" # Para cualquier comuna no listada
))
freq(base_antropologia$comuna_distancia, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
comuna
unique(base_antropologia$comuna)
base_antropologia <- base_antropologia %>%
mutate(
comuna = stringi::stri_trans_general(comuna, "Latin-ASCII"),  # Convierte caracteres latinos en la columna `comuna` a su equivalente ASCII
comuna = tolower(comuna),  # Convierte todos los caracteres en la columna `comuna` a minúsculas
comuna = gsub(" ", "_", comuna),  # Reemplaza espacios por guiones bajos en la columna `comuna`,
comuna = "santa_lucia"  ~ "santiago_centro"
)
base_antropologia <- base_antropologia %>%
mutate(
comuna = stringi::stri_trans_general(comuna, "Latin-ASCII"),  # Convierte caracteres latinos en la columna `comuna` a su equivalente ASCII
comuna = tolower(comuna),  # Convierte todos los caracteres en la columna `comuna` a minúsculas
comuna = gsub(" ", "_", comuna),  # Reemplaza espacios por guiones bajos en la columna `comuna`,
comuna == "santa_lucia"  ~ "santiago_centro"
)
base_antropologia <- base_antropologia %>%
mutate(
comuna = stri_trans_general(comuna, "Latin-ASCII"),  # Convierte caracteres latinos en la columna `comuna` a su equivalente ASCII
comuna = tolower(comuna),  # Convierte todos los caracteres en la columna `comuna` a minúsculas
comuna = gsub(" ", "_", comuna),  # Reemplaza espacios por guiones bajos en la columna `comuna`
comuna = case_when(
comuna == "santa_lucia" ~ "santiago_centro",  # Recodifica "santa_lucia" a "santiago_centro"
TRUE ~ comuna  # Mantiene el resto de los valores como están
)
)
base_antropologia <- base_antropologia %>%
mutate(
comuna = stri_trans_general(comuna, "Latin-ASCII"),  # Convierte caracteres latinos en la columna `comuna` a su equivalente ASCII
comuna = tolower(comuna),  # Convierte todos los caracteres en la columna `comuna` a minúsculas
comuna = gsub(" ", "_", comuna),  # Reemplaza espacios por guiones bajos en la columna `comuna`
comuna = case_when(comuna == "santa_lucia" ~ "santiago_centro",  # Recodifica "santa_lucia" a "santiago_centro"
TRUE ~ comuna))
pacman::p_load(tidyverse,# Universo de paquetes : tidyr, dplyr, ggplot2,readr,purrr,tibble, stringr, forcats
openxlsx,#leer archivos xlsx
readxl,# leer archivos xl      #dos formatos de excel xlsx y xl
janitor,#limpieza de datos
writexl,#Guardar tablas formato excel
DataExplorer) #Exploración rápida
pacman::p_load(tidyverse, openxlsx, readxl,readr,janitor, forcats, writexl, DataExplorer,
datos,  knitr, gt, summarytools, ggthemes, hrbrthemes, foreign, DescTools, ineq)
base_antropologia <- base_antropologia %>%
mutate(
comuna = stri_trans_general(comuna, "Latin-ASCII"),  # Convierte caracteres latinos en la columna `comuna` a su equivalente ASCII
comuna = tolower(comuna),  # Convierte todos los caracteres en la columna `comuna` a minúsculas
comuna = gsub(" ", "_", comuna),  # Reemplaza espacios por guiones bajos en la columna `comuna`
comuna = case_when(comuna == "santa_lucia" ~ "santiago_centro",  # Recodifica "santa_lucia" a "santiago_centro"
TRUE ~ comuna))
base_antropologia <- base_antropologia %>%
mutate(
comuna = stri_trans_general(comuna, "Latin-ASCII"),  # Convierte caracteres latinos en la columna `comuna` a su equivalente ASCII
comuna = tolower(comuna),  # Convierte todos los caracteres en la columna `comuna` a minúsculas
comuna = gsub(" ", "_", comuna),  # Reemplaza espacios por guiones bajos en la columna `comuna`
TRUE ~ comuna))
base_antropologia <- base_antropologia %>%
mutate(
comuna = stri_trans_general(comuna, "Latin-ASCII"),  # Convierte caracteres latinos en la columna `comuna` a su equivalente ASCII
comuna = tolower(comuna),  # Convierte todos los caracteres en la columna `comuna` a minúsculas
comuna = gsub(" ", "_", comuna))  # Reemplaza espacios por guiones bajos en la columna `comuna`
base_antropologia <- base_antropologia %>%
<<<<<<< HEAD
mutate(
comuna = stringi::stri_trans_general(comuna, "Latin-ASCII"),  # Convierte caracteres latinos en la columna `comuna` a su equivalente ASCII
comuna = tolower(comuna),  # Convierte todos los caracteres en la columna `comuna` a minúsculas
comuna = gsub(" ", "_", comuna),  # Reemplaza espacios por guiones bajos en la columna `comuna`
)
=======
mutate(ea_07_efecto_estres_rendimiento_r=case_when(ea_07_efecto_estres_rendimiento == "Mucho" ~ "Bastante",
ea_07_efecto_estres_rendimiento == "Bastante" ~ "Bastante",
ea_07_efecto_estres_rendimiento == "Moderado" ~ "Moderamante",
ea_07_efecto_estres_rendimiento == "Poco" ~ "Moderamante"
))
table(base_antropologia$ea_07_efecto_estres_rendimiento)
#ordeno
base_antropologia <- base_antropologia %>%
mutate(ea_07_efecto_estres_rendimiento factor(ea_07_efecto_estres_rendimiento, levels = c("Poco","Moderado", "Bastante",
#ordeno
base_antropologia <- base_antropologia %>%
mutate(ea_07_efecto_estres_rendimiento =factor(ea_07_efecto_estres_rendimiento, levels = c("Poco","Moderado",
"Bastante","Mucho"), ordered = TRUE))
table(base_antropologia$ea_07_efecto_estres_rendimiento)
#recodfico
base_antropologia <- base_antropologia %>%
mutate(ea_07_efecto_estres_rendimiento_r=case_when(ea_07_efecto_estres_rendimiento == "Mucho" ~ "Bastante",
ea_07_efecto_estres_rendimiento == "Bastante" ~ "Bastante",
ea_07_efecto_estres_rendimiento == "Moderado" ~ "Moderamante",
ea_07_efecto_estres_rendimiento == "Poco" ~ "Moderamante"
))
#recodfico
base_antropologia <- base_antropologia %>%
mutate(ea_07_efecto_estres_rendimiento_r=case_when(ea_07_efecto_estres_rendimiento == "Mucho" ~ "Bastante",
ea_07_efecto_estres_rendimiento == "Bastante" ~ "Bastante",
ea_07_efecto_estres_rendimiento == "Moderado" ~ "Moderadamente",
ea_07_efecto_estres_rendimiento == "Poco" ~ "Moderadamente"
))
base_antropologia <- base_antropologia %>%
mutate(ea_07_efecto_estres_rendimiento_r= factor(ea_07_efecto_estres_rendimiento, levels = c("Moderadamente",
"Bastante"
), ordered = TRUE))
table(base_antropologia$ea_07_efecto_estres_rendimiento_r)
table(base_antropologia$ea_07_efecto_estres_rendimiento)
table(base_antropologia$ea_07_efecto_estres_rendimiento)
#recodifico
base_antropologia <- base_antropologia %>%
mutate(ea_07_efecto_estres_rendimiento_r=case_when(ea_07_efecto_estres_rendimiento == "Mucho" ~ "Bastante",
ea_07_efecto_estres_rendimiento == "Bastante" ~ "Bastante",
ea_07_efecto_estres_rendimiento == "Moderado" ~ "Moderadamente",
ea_07_efecto_estres_rendimiento == "Poco" ~ "Moderadamente"
))
table(base_antropologia$ea_07_efecto_estres_rendimiento_r)
base_antropologia <- base_antropologia %>%
mutate(ea_07_efecto_estres_rendimiento_r= factor(ea_07_efecto_estres_rendimiento_r, levels = c("Moderadamente",
"Bastante"
), ordered = TRUE))
#observo
table(base_antropologia$ea_07_efecto_estres_rendimiento_r)
# ea_08_puede_identificar_por_si_mismo_cuando_se_siente_estresado_debidos_a_factores_relacionados_con_el_ambito_universitario",
unique(base_antropologia$ea_08)
>>>>>>> 7d63b38b4d2fc2e12eb7c8ba353aad1965f6a4d7
>>>>>>> 306605e23d8e78738845b1e7f7526325483f0cce
