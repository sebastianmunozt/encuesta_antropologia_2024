# AYUDANTIA 1 -------------------------------------------------------------
#AYUDANTIA 01
#REPASO Y EJERCICIOS

#I. Elementos basicos -----------------------------------------------------------
#Diferencia R y Rstudio
#Pestañas de R.
#Estructura de una funcion

#Ejercicios
# Preguntas basicas iniciales: 
# a) Describe en tus propias palabras la diferencia entre R como lenguaje de programacion y RStudio.
# b) Enumera las pestañas principales de RStudio y describe brevemente su funcion.
# c) Explica que elementos tiene una función en R y cómo se estructura.

#Recuerden que esto está en el ppt


# II. Uso de R como calculadora -------------------------------------------------------
20+1 #sumar
22-1 #restar
10/2 #dividir
40*2 #multiplicar
5**2 #elevado a 2
log(2) #logaritmo
sqrt(21) #raiz cuadrada

#Ejercicios
# Realiza las siguientes operaciones matemáticas:
# 1. Suma 150 y 350.
# 2. Resta 1000 de 500.
# 3. Multiplica 25 por 43.
# 4. Divide 1000 por 250.

#1
150+350
#2
1000-500
#3
25*43
#4
1000/250

# III. Concatenación de Objetos ------------------------------------------------
#Agrupacion
# entrelazar, enlazar, juntar lo que esta dentro de parentesis: c()
#Todo lo que se una va a formar un vector
#Un vector es un conjunto de datos en una dimension (lo que es distinto a un valor)
#ejemplo: vector = conjunto de edades de los estudiantes del curso, valores = numero de las edades 
#una base de datos contiene vectores en distintas dimensiones, por ejemplo: edades y género

c(21, 12)
c(21, 12) + c(2, 1)
6 * c(3, 6, 9)

#Ejercicios
# Realiza y guarda los resultados en vectores:
# 1. Concatena los números 10, 20, y 30 en un vector llamado 'vector1'.
# 2. Concatena los números 5, 15, y 25 en un vector llamado 'vector2'.
# 3. Suma 5 a cada elemento de 'vector1' y guarda el resultado en 'resultado1'.

#1
vector1 <- c(10, 20, 30)

#2
vector2 <- c(5, 15, 25)

#3
resultado1 <- 5 + c(10, 20, 30)
#o también
resultado1 <- 5 + vector1


# IV. Operadores Lógicos ------------------------------------------------------
#Entrega verdaderos (TRUE) o falsos (FALSE) 
#Nos indican si se cumplen ciertas condiciones: TRUE or FALSE

5 == 2 #5 es igual a 2? Falso
5 != 2 #5 es distinto de 2? Verdadero
2 > 4 #Mayor
3 <= 2 # Menor o igual
3 & 7  # 3 y 7
10 | 2 # 10 o 2

4 | 2+3 == 2+2 | 5
#Sigue un orden logico de izq a derecha

c(38 <= 15, 3 < 5 & 6, 3 == 5)
#Las comas separan las operaciones

#Ejercicios
# Evalúa las siguientes expresiones lógicas y predice el resultado:
# 1. ¿Es 50 igual a 50?
# 2. ¿Es 100 diferente de 200?
# 3. ¿Es 30 mayor que 25 y menor que 50 al mismo tiempo?

#1
50==50

#2
100!=200

#3
#principales errores:
30 > 25 & 50 #30 es mayor a 25 y 50 al mismo tiempo?
(30 > 25) < 50  #30 es mayor a 25? esto seria menor a 50?

#respuesta correcta:
30 > 25 & 30 < 50


# V. Lenguaje orientado a objetos -----------------------------------------------------------------
#podemos crear objetos que se guarden como tales en distintos lenguajes, 
# es decir, podemos designar distintos datos a un objeto que podremos nombrar
#básicamente como nosotros determinemos, dependiendo de lo que busquemos

#Asignación al Global Enviroment
#asigna un valor al objeto y se guarda en el enviroment

p <- 20 # p va a tomar el valor de 20, almacenándose en el Enviroment

#Podemos Sobreescribir el objeto
a <- 5
b <- a
a <- 4
a
b

#¿Que valores puede tomar b? el ultimo valor que se le asigne 
#En este caso b queda con el valor de 5, porque es el primer valor que le dimos al objeto a
#nosotros cambiamos el valor de a despues de asignarle el valor a b
#entonces, b no va a tomar ese ultimo valor 
#para que b tomara el nuevo valor que le asignamos al objeto a, necesitamos repetir la operacion 
#que indica que b toma el valor de a, tomando asi el nuevo valor que le asignamos

#depende del orden, en este caso el orden si altera el producto 


#se pueden hacer operaciones directamente con los objetos:
presupuesto_2020 <- 20000
presupuesto_2021 <- 30000
presupuesto_total <- presupuesto_2020 + presupuesto_2021
presupuesto_total

#Ejercicios
# Asigna valores y realiza operaciones, guardando los resultados:
# 1. Asigna el número 100 a un objeto llamado 'numero1' y 200 a 'numero2'.
# 2. Suma 'numero1' y 'numero2', y guarda el resultado en 'suma_total'.
# 3. Multiplica 'numero1' por 2 y guarda el resultado en 'doble_numero1'.

#1
numero1 <- 100
numero2 <- 200

#2
suma_total <- numero1+numero2

#3
doble_numero1 <- 2 * numero1


# VI. Funciones básicas [seq, rep] ---------------------------------
# Generación de secuencias y repeticiones 

#Secuencias
seq(from = -3, to = 6, by = 1) #secuencia del -3 al 6 con un salto de 1 en 1
seq(from = 2, to = 10, by = 2) #secuencia del 2 al 10, de 2 en 2
seq(from = 1, to = 10, by = 1)
1:10 #otra forma, solo con salto de 1 en 1 
#(los dos puntos significan que la secuencia va de un numero hasta el otro)

seq(from = 1, to = 10, by = 1) == 1:10


seq(from = 0, to = 1, length.out = 11) #longitud 
seq(from = 0, to = 1, length.out = 30)

#Repeticiones
rep(21, times = 21)
rep(c(3,2,1), times = 3) #repetición del vector 3,2,1, en 3 veces
rep(1:6, times = 2) #repetición del 1 al 6, 2 veces
rep(1:4, times = 2) #repetición del 1 al 4, 2 veces


#22334456
rep(2:6, times = c(2, 2, 2, 1, 1)) #repetición del 2 al 6, que va a tener los
#tiempos estimados en la concatenación anterior
#esto es: (dos veces, dos veces, dos veces, una vez, una vez) 
#cada número de la secuencia se va a repetir esa cantidad de veces (en orden)

#rep 2 4 y 6 cada uno tres veces
rep(c(2,4,6), each = 3) #que se repita cada uno 3 veces
rep(1:4, each = 2)
rep(1:3, each = 2)

#Se utilizan distintos terminos para distintos objetivos
#Por ejemplo, para destimar la cantidad de veces que se repite
#EACH: Cada uno se repite
#TIMES: Se repiten todos

#Mezclando distintas funciones
Repetición_pares <- seq(from = 2, to = 10, by = 2) 

seq(from = 1, to = 10, by = 1) > 6 #vector con una secuencia con números del 1 al 10
#cuales valores de la secuencia son mayores a 6?

#Agregando mas cosas
which(seq(from = 1, to = 17, by = 1) > 12) #nos entrega la posición, de qué número en adelante
#donde estan los numeros de la secuencia mayores a 12 (en que posicion)

#Ejercicios
# 1. Crea una secuencia del 1 al 20 con intervalo de 2 y guárdala en 'secuencia1'.
# 2. Repite el número 5, diez veces y guarda el resultado en 'repeticion1'.
# 3. Crea una secuencia del 10 al 50 con un intervalo de 5 y guárdala en 'secuencia2'.

#1
secuencia1 <- seq(from = 1, to = 20, by = 2)

#2
repeticion1 <- rep(5, times = 10)

#3
secuencia2 <- seq(from = 10, to = 50, by = 5)


# VII. Indexación y data.frame ----------------------------------------------------------------
#Data frame: base de datos que incluye distintas variables
#Ejemplo: data frame de caracteristicas de los estudiantes del curso
#contiene vectores en distintas dimensiones: edad, tipo de colegio, tendencia politica, genero

##DATA FRAME
#seleccion de las variables
edad <- c(22, 18, 25, 20, 21, 20)
tipo_colegio <- c("privado", "publico", "publico", "privado", "publico", "publico")
tendencia_politica <- c("izquierda", "derecha", "centro", "izquierda", "centro", "centro")
genero <- c("mujer", "hombre", "mujer", "otro", "mujer", "hombre")

#creacion de una base de datos con las caracteristicas de los estudiantes del curso
data.frame(edad, tipo_colegio, tendencia_politica, genero)

#para guardar la base de datos 
estudiantes_antropologia <- data.frame(edad, tipo_colegio, tendencia_politica, genero)

#ver la data
View(estudiantes_antropologia)

##INDEXAR
#Rescatar objetos de una data frame o base de datos
#se representa por los corchetes [x]

#Puedes indexar un vector desde una data frame
#Puedes rescatar ciertos elementos de una base de datos 
#depende de lo que quieras hacer, en qué quieras trabajar

edad[edad > 20] #quiero rescatar las edades mayores a 20
edad[edad < 20] #quiero rescatar las edades menores a 20
edad[edad < 18] #quiero rescatar las edades menores a 20

# Explorar la base de datos
str(estudiantes_antropologia) # Estructura de la base
#4 variables con 6 observaciones

nrow(estudiantes_antropologia) # Número de filas CASOS
ncol(estudiantes_antropologia) # Número de columnas VARIABLES

View(estudiantes_antropologia) # Abrir la base de datos

# Llamar a una variable de la base
estudiantes_antropologia$edad #llamar a la variable edad que contiene la base
estudiantes_antropologia$tipo_colegio[1] #llamar la posicion 1 de la variable tipo de colegio
estudiantes_antropologia$genero[4] #llamar la posicion 4 de la variable genero

# Buscar en la base de datos [fila, columna]
#lado izq fila, lado derecho columna
estudiantes_antropologia[1,] # Rescato todo lo de la fila 1
estudiantes_antropologia[,1] # Rescato todo lo de la columna 1
estudiantes_antropologia[,2] # Rescato todo lo de la columna 2
estudiantes_antropologia[,3] # Rescato todo lo de la columna 3
estudiantes_antropologia[,4] # Rescato todo lo de la columna 4

estudiantes_antropologia[, c(2,3)] # Rescato columnas 2 y 3
estudiantes_antropologia[, "edad"] # Rescato columna edad
estudiantes_antropologia$genero == "mujer" # Donde el género es mujer

#Ejercicios
# Con los vectores dados, crea un data.frame llamado 'estudiantes_antropologia' y realiza las tareas solicitadas:
# Edad, Sexo, Tendencia Política, Ingreso Familiar, Comuna de Residencia
# Utiliza los siguientes vectores para crear un data.frame llamado 'estudiantes_antropologia':
edad <- c(22, 18, 25, 20, 21, 19, 23, 24, 26, 22, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36)
sexo <- c("masculino", "femenino", "no-binario", "femenino", "masculino", "femenino", "no-binario", "masculino", "femenino", "no-binario", "femenino", "masculino", "femenino", "no-binario", "masculino", "femenino", "no-binario", "masculino", "femenino", "no-binario")
tendencia_politica <- c("izquierda", "derecha", "centro", "izquierda", "derecha", "centro", "izquierda", "derecha", "centro", "izquierda", "derecha", "centro", "izquierda", "derecha", "centro", "izquierda", "derecha", "centro", "izquierda", "derecha")
ingreso_familiar <- c(1000, 1500, 2000, 2500, 3000, 3500, 4000, 4500, 5000, 5500, 6000, 6500, 7000, 7500, 8000, 8500, 9000, 9500, 10000, 10500)
comuna_residencia <- c("Providencia", "Las Condes", "Ñuñoa", "Santiago", "Vitacura", "La Reina", "Peñalolén", "Macul", "La Florida", "Puente Alto", "Maipú", "Pudahuel", "Cerrillos", "Quilicura", "Recoleta", "Independencia", "Conchalí", "Renca", "Cerro Navia", "Lo Prado")

#Ya estan las variables, así que ahora creamos la data que incluya esas variables
estudiantes_antropologia <- data.frame(edad, sexo, tendencia_politica, ingreso_familiar, comuna_residencia)


# Funciones básicas -------------------------------------------------------

min() #para obtener el mínimo de un vector
max() #para obtener el máximo de un vector
length() #para obtener la longitud de un vector, conteo de casos
range() #para obtener el rango de valores de un vector
sum() #entrega la suma de todos los elementos de un vector
prod() #multiplica todos los elementos de un vector
which.min() #entrega la posición del valor min de un vector
which.max() #entrega la posición del valor máximo del vector
rev() #invierte un vector
str() #estructura de la base
nrow() #número de filas
ncol() #número de columnas

#MTC
mean() #media
median() #mediana
sd() #desviacion estandar

#Ejercicios
# 1. Calcula la edad promedio de los estudiantes.
# 2. Calcula la desviación estándar de la edad de los estudiantes.
# 3. Muestra la información del décimo estudiante.
# 4. Muestra todas las comunas de residencia de los estudiantes.

#1
mean(estudiantes_antropologia$edad) # Edad promedio

#2
sd(estudiantes_antropologia$edad) # Desviación estándar de la edad

#3
estudiantes_antropologia[10, ] # Información del décimo estudiante

#4
estudiantes_antropologia$comuna_residencia # Columna de comunas de residencia






# AYUDANTIA 2 -------------------------------------------------------------

# Ayudantía 2
# TIDYVERSE: seleccionar, filtrar, mutar, agrupar y resumir

## Carga de paquetes tidyverse con pacman
install.packages("pacman")
pacman::p_load(tidyverse)

# Carga del conjunto de datos

datos_anime <- read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-04-23/tidy_anime.csv")

#Le estamos pidiendo a Rstudio que nos lea este conjunto de datos desde el link
#y lo guarde como datos_anime

## Ejecutar esta limpieza para evitar casos repetidos
datos_anime <- datos_anime %>%
  distinct(animeID, .keep_all = TRUE)

#¿Qué le estamos diciendo a Rstudio?
#guárdame en datos_anime, sobreescribe los datos de la data eliminando las filas duplicadas
#la función distinct() se utiliza para eliminar las filas duplicadas de un dataframe
#le indicamos a RStudio que tome el dataframe datos_anime, aplique la función distinct() sobre la columna animeID, 
#y mantenga todas las columnas de cada fila (keep_all = TRUE)

## 0. Observar las variables con names() 
names (datos_anime)

#vamos a ver la data

view(datos_anime)


# Select ------------------------------------------------------------------

# 1. Seleccionar las columnas name, genre y score. Guarda esta selección como base: columnas_seleccionadas
columnas_seleccionadas <- datos_anime %>%
  select(name, genre, score)
#seleccionamos 3 variables

#veamos como nos queda
view(columnas_seleccionadas) 

# 2. Seleccionar las columnas name hasta studio. Guarda esta selección como base: seleccion_rango
seleccion_rango <- datos_anime %>%
  select(name:studio)
#seleccionamos 9 variables 

# 3. Excluir las columnas related y background. Guarda esta selección como base: excluir_columnas
excluir_columnas <- datos_anime %>%
  select(-related, -background)
#excluimos las variables related y blackground, quedandonos con 26 de 28 variables totales
#lo podemos hacer tal como una operación matematica, restando las variables que queremos excluir

#si se fijan, las observaciones continuan siendo las mismas, misma cantidad
#porque seleccionamos variables, la cantidad de observaciones no se altera
#13.631 observaciones en las variables seleccionadas


# Filter ------------------------------------------------------------------

# 1. Filtrar para quedarse solo con el Studio Ghibli, primero observar cuáles son los estudios en la variable studio con unique(). 
#Guarda este filtro como base: ghibli
ghibli <- datos_anime %>%
  filter(studio == "Studio Ghibli")
#nos quedamos solo con los datos del Studio Ghibli
#disminuyen las observaciones, ¿por que?
#no sacamos ninguna variable, pero si el resto de datos de animes de otros studios 

# 2. Para el Studio Ghibli, quedarse solo con los géneros "Action", "Adventure", "Fantasy". 
#Guarda este filtro como base: ghibli_generos
ghibli_generos <- datos_anime %>%
  filter(studio == "Studio Ghibli" & 
           (genre %in% c("Action", "Adventure", "Fantasy")))

view(ghibli_generos) 

# 3. Filtrar animes que aún se están emitiendo. Guarda este filtro como base: emitiendose
# variable si se están o no emitiendo: status
#en estatus las que se están emitiendo son: Currently Airing

emitiendose <- datos_anime %>%
  filter(status == "Currently Airing")

#de los animes en general filtramos 
#solo nos quedan los que estan actualmente al aire 

#¿cuáles son los animes que están actualmente en emisión?
View(emitiendose) 


# Mutate ------------------------------------------------------------------
#mutate() se utiliza para agregar nuevas columnas o modificar las existentes
#crear nuevas variables utilizando los datos que deseemos

#En este caso vamos a...

# Añadir una columna de clasificación según la puntuación: 
# guardando base nueva como: etiqueta_puntuacion
# generando una variable nueva llamada: categoria_puntuacion
# recodificando con case_when, score cuando:
# es mayor o igual a 8 es "Alto"
# menor a 8 y mayor o igual a 6 es "Medio"
# el resto "Bajo"

unique(datos_anime$score)
etiqueta_puntuacion <- datos_anime %>%
  mutate(categoria_puntuacion = case_when(
    score >= 8 ~ "Alto",
    score >= 6 & score < 8 ~ "Medio",
    TRUE ~ "Bajo"
  ))

#unique() proporciona una lista de todas las puntuaciones únicas presentes en la columna "score"
#el signo $ asocia y llama la variable score de la data datos_anime

#case_when() significa "en el caso de que sea" o "cuando sea..." 
#ej: muta o modifica esta categoría cuando el puntaje sea >= 8, >= 6 & < 8, TRUE (el resto)
#permite definir condiciones y establecer sus correspondientes resultados

#En este caso se está creando una nueva columna llamada "categoria_puntuacion" 
#basada en los valores de la columna "score"
#con las siguientes condiciones:
#Si la puntuación es mayor o igual a 8, la categoría de puntuación será "Alto"
#Si la puntuación es mayor o igual a 6 y menor que 8, la categoría de puntuación será "Medio"
#Para todos los demás casos, la categoría de puntuación será "Bajo"

View(etiqueta_puntuacion)
#podremos ver la categoría de la puntuación según las categorías que acabamos de definir
#cambio va a quedar guardado en etiqueta_puntuacion

table(etiqueta_puntuacion$categoria_puntuacion)
#¿Cuántos animes tenemos con puntuación alta? ¿Qué puntuación tienen la mayoría de los animes? 
#son considerablemente menos los casos de animes con puntuación alta
#los animes con puntuación baja superan considerablemente en cantidad a los animes con puntuación alta, casi 8 veces su valor

#podemos ver nuevamente etiqueta_puntuación para sacar más conclusiones: ¿qué animes tienen puntuaciones altas?


# Group By y Summarise -----------------------------------------------------
#Agrupar por y resumir

# 1. Contar películas por estudio y encontrar el estudio con más películas. Guarda este conteo como base: conteo_peliculas_estudio
conteo_peliculas_estudio <- datos_anime %>%
  filter(type == "Movie") %>%
  group_by(studio) %>%
  summarise(cantidad_peliculas = n()) %>%
  arrange(desc(cantidad_peliculas))

#Contar anime por tv por genero y encontrar el genero con más anime tv. GUardar como conteo_pelicula_genero
conteo_tv_genero <- datos_anime %>% 
  filter(type == "TV") %>% 
  group_by(genre) %>% 
  summarise(cantidad_TV = n()) %>% 
  arrange(desc(cantidad_TV))



#Filtramos los datos según la categoría Movie, es decir, dejamos solo las películas de anime
#Agrupamos las películas por studio de animación
#Summarise: resumimos la cantidad de películas
#la función n() cuenta el número de observaciones en cada grupo: cuántas películas tiene cada estudio
#Arrange: ordenamos los resultados en orden descendente según la cantidad de películas 
#Esto significa que los estudios con más películas estarán en la parte superior del resultado

#¿Qué estudio animó la mayor cantidad de películas?
View(conteo_peliculas_estudio)
#Toei Animation





# AYUDANTIA 3 -------------------------------------------------------------


# Ayudantía 3
# Limpieza y transformación de datos

#Procesamiento de base de datos ------------------------------------------------

# install.packages("pacman")
pacman::p_load(tidyverse,# Universo de paquetes : tidyr, dplyr, ggplot2,readr,purrr,tibble, stringr, forcats
               openxlsx,#leer archivos xlsx
               readxl,# leer archivos xl      #dos formatos de excel xlsx y xl
               janitor,#limpieza de datos
               writexl,#Guardar tablas formato excel
               DataExplorer) #Exploración rápida


#IMPORTAR LA BASE DESDE EXCEL Y GUARDARLA EN EL ENVIROMENT----------------------
#vamos a importar la base de datos en escel a RStudio
#la vamos a llamar base_am
#base_am <- read.xlsx(xlsxFile = "/Users/fran/Desktop/R ayudantías/mc2/ayudantias/ayudantia_03/ALTOMAIPO.xlsx", colNames = TRUE, detectDates = TRUE)


base_am <- read.xlsx(xlsxFile = "Ayudantía 3/base/ALTO_MAIPO.xlsx", colNames = TRUE, detectDates = TRUE)

#colNames = TRUE: la primera fila del archivo se interpretará como nombres de columna. En FALSE, se generarán nombres de columna predeterminados. 
#detectDates = TRUE: intentará detectar las fechas en el archivo y las convertirá automáticamente. En FALSE, no se realizará esta detección automática y las fechas se tratarán como cadenas de texto


#EXPLORAR LA DATA
glimpse(base_am) 
#glimpse significa destello, sería como un vistazo rápido inicial de los datos en la consola
#Una primera mirada de lo que hay en mis datos: número de filas y columnas, además de las variables
#las variables están nombradas de manera poco práctica. Hay variables nombradas directamente con la pregunta

view(base_am) 
#al ver la data podemos notar la primera fila es extraña, dice "respuesta" o repite el nombre de la variable

#Vamos a eliminar la fila que repetía los nombres de las variables
base_am <- base_am[-1,]
#base_am <- base_am[-1,] elimina la primera fila del conjunto de datos. Selecciona todas las filas excepto la primera (`-1` indica la fila a eliminar)
#Ahora volvamos a ver la data a ver qué pasa...

#Vamos a ver nos nombres de las variables en la consola
names(base_am) 
#notamos que hay puntos, mayúsculas y minúsculas, preguntas muy largas. Incluso en algunas variables muestra las categorías de respuesta
#La data está "sucia", lo que dificultra trabajar en ella


#LIMPIEZA INICIAL---------------------------------------------------------------
base_am <- janitor::clean_names(base_am) 
#con esto transformo todo a minúscula, quito tildes, saco signos, borro espacios
#le vamos a decir al RStudio que nos guarde bajo el mismo nombre los datos limpios
#nos sobreescribió la data, pero ahora está limpia 

#Ahora veamos cómo nos quedan los nombres de las variables...
names(base_am)


#CARACTERISTICAS DE LA DATA
nrow(base_am) #473 cantidad de casos: filas
ncol(base_am) #26 cantidad de variables: columnas
sapply(base_am, FUN = class) # sapply: realiza una función a varias variables: se utiliza para aplicar la función `class()` a cada columna 
#y devolver una lista con las clases de cada columna (tipo de variable)
str(base_am) #muestra la estructura del objeto base de datos

# RENOMBRAR VARIABLES ----------------------------------------------------------
#vamos a cambiarle los nombres a las variables

##Pasos:
#1. Extraer el nombre de todas las variables desde la consola (lo copio)
names (base_am)

# [1] "comuna"                                                                                                                                                                                    
# [2] "localidad"                                                                                                                                                                                 
# [3] "sexo"                                                                                                                                                                                      
# [4] "otra_comuna"                                                                                                                                                                               
# [5] "hace_cuantos_anos_vive_en_esta_comuna_enc_anotar_cantidad_de_anos_si_es_menos_de_un_ano_anotar_0"                                                                                          
# [6] "la_vivienda_que_usted_ocupa_es_enc_leer_alternativas"                                                                                                                                      
# [7] "cual_es_el_valor_que_paga_mensualmente"                                                                                                                                                    
# [8] "parentezco_con_jedfe_de_hogar"                                                                                                                                                             
# [9] "edad"                                                                                                                                                                                      
# [10] "genero"                                                                                                                                                                                    
# [11] "situacion_ocupacional"                                                                                                                                                                     
# [12] "cual_es_la_ocupacion_principal_del_jefe_de_hogar_enc_respuesta_espontanea_clasificar_en_una_de_las_siguientes_categorias"                                                                  
# [13] "principales_traslados"                                                                                                                                                                     
# [14] "lugar_traslado"                                                                                                                                                                            
# [15] "temporalidad_traslado"                                                                                                                                                                     
# [16] "medio_transporte"                                                                                                                                                                          
# [17] "tiempo_traslado"                                                                                                                                                                           
# [18] "a_que_sistema_de_salud_pertenece_su_familia_enc_leer_alternativas_y_responder_todas_las_que_correspondan"                                                                                  
# [19] "cuando_usted_o_algun_familiar_necesita_atencion_de_salud_adonde_acude_principalmente_enc_leer_alternativas_y_responder_una"                                                                
# [20] "ha_cambiado_la_calidad_de_la_atencion_en_los_ultimos_seis_meses"                                                                                                                           
# [21] "si_nota_un_cambio_como_ha_cambiado_en_enc_leer_cada_tipo_de_cambio_y_anotar_1_si_2_no_todos_los_tipos_de_cambios_deben_quedar_con_una_respuesta_anotada"                                   
# [22] "en_los_ultimos_seis_meses_han_ocurrido_incidentes_que_alteren_el_orden_publico_en_la_localidad_donde_vive_enc_leer_alternativas_y_responder_una"                                           
# [23] "la_presencia_de_aes_gener_en_la_comuna_le_ha_traido_beneficios_a_usted_o_a_su_familia_enc_leer_cada_tipo_de_beneficio_todos_los_tipos_de_beneficios_deben_quedar_con_una_respuesta_anotada"
# [24] "usted_conoce_el_mecanismo_por_el_cual_opera_la_produccion_de_electricidad_en_la_central_hidroelectrica_alto_maipo"                                                                         
# [25] "solo_si_conoce_el_mecanismo_me_podria_indicar_cual_es_el_mecanismo_que_se_utiliza"                                                                                                         
# [26] "desde_el_inicio_de_las_actividades_de_alto_maipo_ha_notado_diferencias_en_el_nivel_del_caudal_del_rio_enc_leer_cada_uno_de_los_ambitos_elegir_una_alternativa"  


#2. Generar un vector con todas las columnas que quiero renombrar (concatenamos todas las variables o columnas)
#vamos a llamar a este vector cols_a_renombrar

cols_a_renombrar <- c(                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
  "comuna",                                                                                                                                                                                    
  "localidad",                                                                                                                                                                                 
  "sexo",                                                                                                                                                                                      
  "otra_comuna",                                                                                                                                                                               
  "hace_cuantos_anos_vive_en_esta_comuna_enc_anotar_cantidad_de_anos_si_es_menos_de_un_ano_anotar_0",                                                                                          
  "la_vivienda_que_usted_ocupa_es_enc_leer_alternativas",                                                                                                                                      
  "cual_es_el_valor_que_paga_mensualmente",                                                                                                                                                    
  "parentezco_con_jedfe_de_hogar",                                                                                                                                                             
  "edad",                                                                                                                                                                                    
  "genero",                                                                                                                                                                                    
  "situacion_ocupacional",                                                                                                                                                                     
  "cual_es_la_ocupacion_principal_del_jefe_de_hogar_enc_respuesta_espontanea_clasificar_en_una_de_las_siguientes_categorias",                                                                  
  "principales_traslados",                                                                                                                                                                     
  "lugar_traslado",                                                                                                                                                                            
  "temporalidad_traslado",                                                                                                                                                                     
  "medio_transporte",                                                                                                                                                                          
  "tiempo_traslado",                                                                                                                                                                           
  "a_que_sistema_de_salud_pertenece_su_familia_enc_leer_alternativas_y_responder_todas_las_que_correspondan",                                                                                  
  "cuando_usted_o_algun_familiar_necesita_atencion_de_salud_adonde_acude_principalmente_enc_leer_alternativas_y_responder_una",                                                                
  "ha_cambiado_la_calidad_de_la_atencion_en_los_ultimos_seis_meses",                                                                                                                           
  "si_nota_un_cambio_como_ha_cambiado_en_enc_leer_cada_tipo_de_cambio_y_anotar_1_si_2_no_todos_los_tipos_de_cambios_deben_quedar_con_una_respuesta_anotada",                                   
  "en_los_ultimos_seis_meses_han_ocurrido_incidentes_que_alteren_el_orden_publico_en_la_localidad_donde_vive_enc_leer_alternativas_y_responder_una",                                           
  "la_presencia_de_aes_gener_en_la_comuna_le_ha_traido_beneficios_a_usted_o_a_su_familia_enc_leer_cada_tipo_de_beneficio_todos_los_tipos_de_beneficios_deben_quedar_con_una_respuesta_anotada",
  "usted_conoce_el_mecanismo_por_el_cual_opera_la_produccion_de_electricidad_en_la_central_hidroelectrica_alto_maipo",                                                                         
  "solo_si_conoce_el_mecanismo_me_podria_indicar_cual_es_el_mecanismo_que_se_utiliza",                                                                                                         
  "desde_el_inicio_de_las_actividades_de_alto_maipo_ha_notado_diferencias_en_el_nivel_del_caudal_del_rio_enc_leer_cada_uno_de_los_ambitos_elegir_una_alternativa" ) 

#3. Generar un vector sólo con las 3 primeras letras: p01 (esto para simplificar)
#vamos a llamar a ese vector nuevos_nombres

#podemos hacerlo de estas dos formas distintas:
nuevos_nombres <- str_sub(string = cols_a_renombrar, start = 1, end = 4 ) #muestro los argumentos
#ó
nuevos_nombres <- str_sub(cols_a_renombrar, 1, 4) #no muestro los argumentos

#vamos a ver cómo nos quedarían nuestras variables
nuevos_nombres

#En la primera función:
#primer argumento string = de donde saco los nombres: en este caso el vector creado anteriormente 
#segundo argumento start = desde que posición extraigo (desde la posición 1)
#tercer argumento end= hasta donde (hasta la posición 4)


#4. Renombrar considerando todas las columnas elegidas asignando nuevos nombres
base_am <- base_am %>%
  rename_at(vars(cols_a_renombrar), ~ nuevos_nombres) #recodificación múltiples con un vector

#¿Qué estamos diciendo aquí?
#rename_at() permite renombrar columnas seleccionadas basándose en condiciones específicas: renombrame esto en 
#vars permite seleccionar columnas basadas en sus nombres 
#cols_a_renombrar es es el vector creado anteriormente que contiene los nombres de las columnas que se desean renombrar

#renombrame las columnas de la data original basadas en sus nombres desde el vector cols_a_renombrar                                                         

#Problema! "cual" at locations 7 and 12.!
#! Names must be unique, lo que quiere decir es que el nuevo nombre que se está intentando asignar ya existe en el dataframe 
#y los nombres de las columnas deben ser únicos 
#Para resolver este error, necesitamos asegurarnos de que los nuevos nombres que estamos asignando no estén duplicados en el dataframe
#el código distinct no nos sirve en este caso para eliminar duplicados, pues elimina filas 
#¿Qué podemos hacer?

#Podemos *renombrar algunas variables en específico*

#veo las categorías de todas las variables
sapply(base_am, FUN = unique)
#sapply() se utiliza para *aplicar* una función determinada a cada columna del dataframe 
#En este caso, se desea aplicar la función unique() a cada variable de la data base_am
#y devolver una lista con los valores únicos de cada variable

#Renombrar uno por uno las variables de interés, con las que se desee trabajar
#Utilizamos dplyr::rename()
#el operador :: se utiliza para acceder a funciones, métodos u objetos de un paquete
#primero colocamos el nuevo nombre = y luego el nombre antiguo
#queremos que este nombre lo tome la variable denominada ...

base_am <- base_am %>% dplyr::rename( anios_comuna = hace_cuantos_anos_vive_en_esta_comuna_enc_anotar_cantidad_de_anos_si_es_menos_de_un_ano_anotar_0,
                                      propiedad_vivienda = la_vivienda_que_usted_ocupa_es_enc_leer_alternativas,
                                      sistema_salud = a_que_sistema_de_salud_pertenece_su_familia_enc_leer_alternativas_y_responder_todas_las_que_correspondan,
                                      pago_vivienda = cual_es_el_valor_que_paga_mensualmente,  
                                      ocupacion_jefe_hogar = cual_es_la_ocupacion_principal_del_jefe_de_hogar_enc_respuesta_espontanea_clasificar_en_una_de_las_siguientes_categorias, 
                                      servicio_salud = cuando_usted_o_algun_familiar_necesita_atencion_de_salud_adonde_acude_principalmente_enc_leer_alternativas_y_responder_una, 
                                      calidad_atencion = ha_cambiado_la_calidad_de_la_atencion_en_los_ultimos_seis_meses, 
                                      cambio_atencion = si_nota_un_cambio_como_ha_cambiado_en_enc_leer_cada_tipo_de_cambio_y_anotar_1_si_2_no_todos_los_tipos_de_cambios_deben_quedar_con_una_respuesta_anotada, 
                                      ocurrencia_incidentes= en_los_ultimos_seis_meses_han_ocurrido_incidentes_que_alteren_el_orden_publico_en_la_localidad_donde_vive_enc_leer_alternativas_y_responder_una, 
                                      beneficios_aes_gener = la_presencia_de_aes_gener_en_la_comuna_le_ha_traido_beneficios_a_usted_o_a_su_familia_enc_leer_cada_tipo_de_beneficio_todos_los_tipos_de_beneficios_deben_quedar_con_una_respuesta_anotada, 
                                      mecanismo_produccion = usted_conoce_el_mecanismo_por_el_cual_opera_la_produccion_de_electricidad_en_la_central_hidroelectrica_alto_maipo, 
                                      nombre_mecanismo = solo_si_conoce_el_mecanismo_me_podria_indicar_cual_es_el_mecanismo_que_se_utiliza, 
                                      diferencia_caudal = desde_el_inicio_de_las_actividades_de_alto_maipo_ha_notado_diferencias_en_el_nivel_del_caudal_del_rio_enc_leer_cada_uno_de_los_ambitos_elegir_una_alternativa)



#Veamos cómo nos quedan las variables
names(base_am)


# SELECCIÓN Y TRANSFORMACIÓN DE VARIABLES --------------------------------------
DataExplorer::create_report(base_am) 

#DataExplorer es una herramienta en R que proporciona funciones útiles para explorar y visualizar conjuntos de datos
#genera un reporte en R Markdown
#Este código utiliza la función create_report() del paquete DataExplorer::
#create_report() es una función que genera un informe automático sobre un dataframe dado
#En este caso, le estamos diciendo a RStudio que nos abra la función create_report( y la aplique a la data), tener una visión general de los datos
#función para realizar un reporte general introductorio
#me permite ver posibles transformaciones o limpiezas

# sino funciona el DataExplorer
# install.packages("htmltools", version = "0.5.4")
# library(htmltools)
# library(DataExplorer)


# Transformaciones/limpieza en *VARIABLES CATEGÓRICAS*

#Vamos a seleccionar la variable Situación Ocupacional
unique(base_am$situacion_ocupacional)
#con unique() vamos a ver los datos únicos para esa variable
#tal como he mostrado anteriormente, le estamos diciendio a RStudio que nos de los datos únicos de situacion_ocupacional (sus categorías)
#si se fijan, hay muchas categorías de respuesta
#esto complejiza el análisis, tenemos que ordenar los datos
#Hay muchas categorías que refieren a lo mismo, que se repiten escritas de otro modo, o que están mal escritas
#por ej aquellos que respondieron "trabaja" con "trabajando" 

#realizaremos un conjunto de transformaciones/limpiezas de nuestra base de datos 

# para situación ocupacional (respuesta abierta)
base_am$situacion_ocupacional <- tolower(base_am$situacion_ocupacional) #tolower() pasa todas a minusculas
base_am$situacion_ocupacional  <- gsub(pattern = " ", replacement = "", x = base_am$situacion_ocupacional) #elimino los espacios 

#tolower() tomará los valores de la columna "situacion_ocupacional" del dataframe base_am y los convertirá todos a minúscula
#gsub() se utiliza para eliminar todos los espacios en blanco de los elementos de la columna "situacion_ocupacional" del dataframe base_am
#gsub() es una función en R que se utiliza para reemplazar ocurrencias de un patrón específico en un vector de caracteres con un valor de reemplazo
#pattern = " " especifica el patrón que se buscará en los elementos de la columna, en este caso, el patrón es simplemente un espacio en blanco
#replacement = "" especifica el valor que se utilizará para reemplazar todas las ocurrencias del patrón encontrado
#En este caso, el valor de reemplazo es una cadena vacía, lo que significa que el espacio en blanco será eliminado
#x = es el vector de caracteres en el que se realizarán los reemplazos

# base_am$situacion_ocupacional  <- gsub(" ", "", base_am$situacion_ocupacional) (forma por default)

#vamos a solicitar los datos expuestos en forma de tabla
table(base_am$situacion_ocupacional)
#en este caso vemos que hay muchas categorías que se podrían juntar 
#y así simplificar el análisis

#RECODIFICAR a 3 categorías 
#1. Trabajo remunerado; 2. Trabajo no remunerado; 3. No trabaja.

#entonces vemos las categorías que hay y determinamos cuál se irá a cada grupo
unique(base_am$situacion_ocupacional)
#por ej: trabajando, trabajo remunerado, trabajo indep, trabajaba, si, activo, y similares, las vamos a categorizar como: Trabajo remunerado


#Recodificamos con MUTATE y CASE_WHEN-------------------------------------------

base_am <- base_am %>% mutate(situacion_ocupacional=case_when(situacion_ocupacional=="Trabajo remunerado"~"Trabajo remunerado",
                                                              situacion_ocupacional=="Trabajando"~"Trabajo remunerado",
                                                              situacion_ocupacional=="Trabajo independiente"~"Trabajo remunerado",
                                                              situacion_ocupacional=="Trabajando remunerado"~"Trabajo remunerado",
                                                              situacion_ocupacional=="Trabajador remunerado"~"Trabajo remunerado",
                                                              situacion_ocupacional=="Trabajaba"~"Trabajo remunerado",
                                                              situacion_ocupacional=="Si"~"Trabajo remunerado",
                                                              situacion_ocupacional=="Aseo"~"Trabajo remunerado",
                                                              situacion_ocupacional=="Activo"~"Trabajo remunerado",
                                                              situacion_ocupacional=="Garzona"~"Trabajo remunerado",
                                                              situacion_ocupacional=="Ayudante de cocina"~"Trabajo remunerado",
                                                              situacion_ocupacional=="Trabajando municipla"~"Trabajo remunerado",
                                                              situacion_ocupacional=="trabaja"~"Trabajo remunerado",
                                                              situacion_ocupacional=="1"~"Trabajo remunerado",
                                                              situacion_ocupacional=="Trabaja"~"Trabajo remunerado",
                                                              situacion_ocupacional=="Trabajo rumerado"~"Trabajo remunerado",
                                                              situacion_ocupacional=="Trabajo remerado"~"Trabajo remunerado",
                                                              situacion_ocupacional=="Trabajo renunerado"~"Trabajo remunerado",
                                                              situacion_ocupacional=="Trabajando desde casa"~"Trabajo remunerado",
                                                              situacion_ocupacional=="trabajo remunerado"~"Trabajo remunerado",
                                                              situacion_ocupacional=="Trabajo renminerado"~"Trabajo remunerado",
                                                              situacion_ocupacional=="Dueña de casa"~"Trabajo no remunerado",
                                                              situacion_ocupacional=="Trabajo remunerdo"~"Trabajo no remunerado",
                                                              situacion_ocupacional=="2"~"Trabajo no remunerado",
                                                              situacion_ocupacional=="Trabajo no remunerado"~"Trabajo no remunerado",
                                                              situacion_ocupacional=="2?"~"Trabajo no remunerado",
                                                              situacion_ocupacional=="Cesante"~"No trabaja",
                                                              situacion_ocupacional=="No trabajaba"~"No trabaja",
                                                              situacion_ocupacional=="No"~"No trabaja",
                                                              situacion_ocupacional=="Reservas"~"No trabaja",
                                                              situacion_ocupacional=="Estudiando"~"No trabaja",
                                                              situacion_ocupacional=="No trabaja"~"No trabaja",
                                                              situacion_ocupacional=="no trabaja"~"No trabaja",
                                                              situacion_ocupacional=="Licencia por cirugía"~"No trabaja",
                                                              situacion_ocupacional=="3"~"No trabaja",
                                                              situacion_ocupacional=="Estudiante"~"No trabaja",
                                                              situacion_ocupacional=="Jubilada"~"No trabaja",
                                                              situacion_ocupacional=="No trajaba"~"No trabaja",
                                                              situacion_ocupacional=="3 jubilado"~"No trabaja",
                                                              situacion_ocupacional=="3 jubilada"~"No trabaja",
                                                              TRUE~situacion_ocupacional))

#veamos cómo nos queda la recodificación
unique(base_am$situacion_ocupacional)


#Ejercicio----------------------------------------------------------------------
#Recodifiquemos la variable "parentezco_con_jedfe_de_hogar"
#veamos los datos de la variable

#¿Qué tenemos que hacer primero?
#1. Seleccionar la variable y ver los datos únicos para esta variable (con unique)

unique(base_am$parentezco_con_jedfe_de_hogar)

#2. Dejar todas las categorías en un mismo formato
#poner todo en minúscula y eliminar los espacios

base_am$parentezco_con_jedfe_de_hogar <- tolower(base_am$parentezco_con_jedfe_de_hogar) #pasa todas a minusculas
base_am$parentezco_con_jedfe_de_hogar  <- gsub(pattern = " ", replacement = "", x = base_am$parentezco_con_jedfe_de_hogar) #elimino los espacios

#3. Solicitar los datos expuestos en forma de tabla para determinar qué categorías construir y cuál dato dejar en cada categoría
#¿qué categorías podríamos establecer?

table(base_am$parentezco_con_jedfe_de_hogar)

#4. Recodificar

base_am <- base_am %>% mutate(parentezco_con_jedfe_de_hogar=case_when(parentezco_con_jedfe_de_hogar== "jefedehogar"~"Jefe/a de hogar",
                                                                      parentezco_con_jedfe_de_hogar== "jefadehogar"~"Jefe/a de hogar",
                                                                      parentezco_con_jedfe_de_hogar== "jefadefamilia"~"Jefe/a de hogar",
                                                                      parentezco_con_jedfe_de_hogar== "jefedefamilia"~"Jefe/a de hogar",
                                                                      parentezco_con_jedfe_de_hogar== "jefasehogar(viuda)"~"Jefe/a de hogar",
                                                                      parentezco_con_jedfe_de_hogar== "jefedehogar.(separado)"~"Jefe/a de hogar",
                                                                      parentezco_con_jedfe_de_hogar== "jegadehogar"~"Jefe/a de hogar",
                                                                      parentezco_con_jedfe_de_hogar== "jefadejogar"~"Jefe/a de hogar",
                                                                      parentezco_con_jedfe_de_hogar== "jefasehogar"~"Jefe/a de hogar",
                                                                      parentezco_con_jedfe_de_hogar== "jefehogar"~"Jefe/a de hogar",
                                                                      parentezco_con_jedfe_de_hogar== "jefe"~"Jefe/a de hogar",
                                                                      parentezco_con_jedfe_de_hogar== "pareja"~"Pareja",
                                                                      parentezco_con_jedfe_de_hogar== "cónyuge"~"Pareja",
                                                                      parentezco_con_jedfe_de_hogar== "conyuge"~"Pareja",
                                                                      parentezco_con_jedfe_de_hogar== "conyugue"~"Pareja",
                                                                      parentezco_con_jedfe_de_hogar== "esposo"~"Pareja",
                                                                      parentezco_con_jedfe_de_hogar== "esposa"~"Pareja",
                                                                      parentezco_con_jedfe_de_hogar=="madre"~"Madre/Padre",
                                                                      parentezco_con_jedfe_de_hogar=="mama"~"Madre/Padre",
                                                                      parentezco_con_jedfe_de_hogar=="padre"~"Madre/Padre",
                                                                      parentezco_con_jedfe_de_hogar=="hija"~"Hijo/hija",
                                                                      parentezco_con_jedfe_de_hogar=="hijo"~"Hijo/hija",
                                                                      parentezco_con_jedfe_de_hogar=="hijajefadehogar"~"Hijo/hija",
                                                                      parentezco_con_jedfe_de_hogar=="conviviente"~"Otro",
                                                                      parentezco_con_jedfe_de_hogar=="abuela"~"Otro",
                                                                      parentezco_con_jedfe_de_hogar== "nieta"~"Otro",
                                                                      parentezco_con_jedfe_de_hogar== "nieto"~"Otro",
                                                                      parentezco_con_jedfe_de_hogar== "3"~"Otro",
                                                                      parentezco_con_jedfe_de_hogar== "6"~"Otro",
                                                                      parentezco_con_jedfe_de_hogar== "10"~"Otro",
                                                                      parentezco_con_jedfe_de_hogar== "2"~"Otro",
                                                                      parentezco_con_jedfe_de_hogar== "4"~"Otro",
                                                                      parentezco_con_jedfe_de_hogar== "1"~"Otro",
                                                                      parentezco_con_jedfe_de_hogar== "dueñodecasa"~"Otro",
                                                                      parentezco_con_jedfe_de_hogar== "dueñadecasa"~"Otro",
                                                                      parentezco_con_jedfe_de_hogar== "ahijado"~"Otro",
                                                                      parentezco_con_jedfe_de_hogar== "jubilada"~"Otro",
                                                                      TRUE~parentezco_con_jedfe_de_hogar))

table(base_am$parentezco_con_jedfe_de_hogar)

write.xlsx(x = base_am,file = "Ayudantía 3/base/base_am_Limpia.xlsx")

